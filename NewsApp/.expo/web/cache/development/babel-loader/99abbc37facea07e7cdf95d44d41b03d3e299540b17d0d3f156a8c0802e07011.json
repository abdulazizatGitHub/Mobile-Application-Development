{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport Icon from \"../Icon\";\nvar DialogIcon = function DialogIcon(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    color = _ref.color,\n    icon = _ref.icon,\n    themeOverrides = _ref.theme;\n  var theme = useInternalTheme(themeOverrides);\n  if (!theme.isV3) {\n    return null;\n  }\n  var iconColor = color || theme.colors.secondary;\n  return React.createElement(View, {\n    style: styles.wrapper\n  }, React.createElement(Icon, {\n    source: icon,\n    color: iconColor,\n    size: size\n  }));\n};\nDialogIcon.displayName = 'Dialog.Icon';\nvar styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 24\n  }\n});\nexport default DialogIcon;\nexport { DialogIcon };","map":{"version":3,"names":["React","StyleSheet","View","useInternalTheme","Icon","DialogIcon","_ref","_ref$size","size","color","icon","themeOverrides","theme","isV3","iconColor","colors","secondary","createElement","style","styles","wrapper","source","displayName","create","alignItems","justifyContent","paddingTop"],"sources":["E:\\Mobile-Application-Development\\NewsApp\\node_modules\\react-native-paper\\src\\components\\Dialog\\DialogIcon.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\n\r\nimport type { ThemeProp } from 'src/types';\r\n\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport Icon, { IconSource } from '../Icon';\r\n\r\nexport type Props = {\r\n  /**\r\n   *  Custom color for action icon.\r\n   */\r\n  color?: string;\r\n  /**\r\n   * Name of the icon to show.\r\n   */\r\n  icon: IconSource;\r\n  /**\r\n   * Optional icon size.\r\n   */\r\n  size?: number;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n};\r\n\r\n/**\r\n * @supported Available in v5.x with theme version 3\r\n * A component to show an icon in a Dialog.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { StyleSheet } from 'react-native';\r\n * import { Dialog, Portal, Text } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => {\r\n *   const [visible, setVisible] = React.useState(false);\r\n *\r\n *   const hideDialog = () => setVisible(false);\r\n *\r\n *   return (\r\n *     <Portal>\r\n *       <Dialog visible={visible} onDismiss={hideDialog}>\r\n *         <Dialog.Icon icon=\"alert\" />\r\n *         <Dialog.Title style={styles.title}>This is a title</Dialog.Title>\r\n *         <Dialog.Content>\r\n *           <Text variant=\"bodyMedium\">This is simple dialog</Text>\r\n *         </Dialog.Content>\r\n *       </Dialog>\r\n *     </Portal>\r\n *   );\r\n * };\r\n *\r\n * const styles = StyleSheet.create({\r\n *   title: {\r\n *     textAlign: 'center',\r\n *   },\r\n * })\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst DialogIcon = ({\r\n  size = 24,\r\n  color,\r\n  icon,\r\n  theme: themeOverrides,\r\n}: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n\r\n  if (!theme.isV3) {\r\n    return null;\r\n  }\r\n\r\n  //@ts-ignore\r\n  const iconColor = color || theme.colors.secondary;\r\n\r\n  return (\r\n    <View style={styles.wrapper}>\r\n      <Icon source={icon} color={iconColor} size={size} />\r\n    </View>\r\n  );\r\n};\r\n\r\nDialogIcon.displayName = 'Dialog.Icon';\r\n\r\nconst styles = StyleSheet.create({\r\n  wrapper: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingTop: 24,\r\n  },\r\n});\r\n\r\nexport default DialogIcon;\r\n\r\n// @component-docs ignore-next-line\r\nexport { DialogIcon };\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAK9B,SAASC,gBAAgB;AACzB,OAAOC,IAAI;AA0DX,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAGC,IAAA,EAKN;EAAA,IAAAC,SAAA,GAALD,IAAA,CAJNE,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,EAAE,GAAAA,SAAA;IACTE,KAAK,GAGCH,IAAA,CAHNG,KAAK;IACLC,IAAI,GAEEJ,IAAA,CAFNI,IAAI;IACGC,cAAA,GACDL,IAAA,CADNM,KAAK;EAEL,IAAMA,KAAK,GAAGT,gBAAgB,CAACQ,cAAc,CAAC;EAE9C,IAAI,CAACC,KAAK,CAACC,IAAI,EAAE;IACf,OAAO,IAAI;EACb;EAGA,IAAMC,SAAS,GAAGL,KAAK,IAAIG,KAAK,CAACG,MAAM,CAACC,SAAS;EAEjD,OACEhB,KAAA,CAAAiB,aAAA,CAACf,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC;EAAQ,GAC1BpB,KAAA,CAAAiB,aAAA,CAACb,IAAI;IAACiB,MAAM,EAAEX,IAAK;IAACD,KAAK,EAAEK,SAAU;IAACN,IAAI,EAAEA;EAAK,CAAE,CAC/C,CAAC;AAEX,CAAC;AAEDH,UAAU,CAACiB,WAAW,GAAG,aAAa;AAEtC,IAAMH,MAAM,GAAGlB,UAAU,CAACsB,MAAM,CAAC;EAC/BH,OAAO,EAAE;IACPI,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAerB,UAAU;AAGzB,SAASA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}