{"ast":null,"code":"import React, { useEffect, useRef } from \"react\";\nimport LottieView from \"lottie-react-native\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function GreenBtn() {\n  var lottieRef = useRef(null);\n  var handleAnimationClick = function handleAnimationClick() {\n    if (lottieRef.current) {\n      lottieRef.current.play();\n    }\n  };\n  useEffect(function () {\n    if (lottieRef.current) {\n      lottieRef.current.play();\n    }\n  }, []);\n  return _jsx(View, {\n    children: _jsx(TouchableOpacity, {\n      onPress: handleAnimationClick,\n      children: _jsx(LottieView, {\n        ref: lottieRef,\n        style: {\n          height: 120\n        },\n        source: require(\"../../../assets/Animation/Add-new.json\"),\n        loop: false,\n        autoPlay: false\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useRef","LottieView","TouchableOpacity","View","jsx","_jsx","GreenBtn","lottieRef","handleAnimationClick","current","play","children","onPress","ref","style","height","source","require","loop","autoPlay"],"sources":["E:/Mobile-Application-Development/NewsApp/src/components/Animated/GreenBtn.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport LottieView from \"lottie-react-native\";\r\nimport {TouchableOpacity, View } from \"react-native\";\r\n\r\nexport default function GreenBtn() {\r\n  const lottieRef = useRef(null); // Create a ref to control the Lottie animation\r\n\r\n  const handleAnimationClick = () => {\r\n    if (lottieRef.current) {\r\n      lottieRef.current.play(); // Play the animation when clicked\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Optional: Play the animation automatically when the component mounts\r\n    if (lottieRef.current) {\r\n      lottieRef.current.play();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={handleAnimationClick}>\r\n        <LottieView\r\n          ref={lottieRef} // Assign the ref to the LottieView component\r\n          style={{ height: 120 }}\r\n          source={require(\"../../../assets/Animation/Add-new.json\")}\r\n          loop={false} // Set loop to false to play the animation only once\r\n          autoPlay={false} // Disable automatic playback on mount\r\n          // Trigger animation when pressed\r\n        />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,qBAAqB;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAG7C,eAAe,SAASC,QAAQA,CAAA,EAAG;EACjC,IAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE9B,IAAMQ,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IACjC,IAAID,SAAS,CAACE,OAAO,EAAE;MACrBF,SAAS,CAACE,OAAO,CAACC,IAAI,CAAC,CAAC;IAC1B;EACF,CAAC;EAEDX,SAAS,CAAC,YAAM;IAEd,IAAIQ,SAAS,CAACE,OAAO,EAAE;MACrBF,SAAS,CAACE,OAAO,CAACC,IAAI,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OACEL,IAAA,CAACF,IAAI;IAAAQ,QAAA,EACHN,IAAA,CAACH,gBAAgB;MAACU,OAAO,EAAEJ,oBAAqB;MAAAG,QAAA,EAC9CN,IAAA,CAACJ,UAAU;QACTY,GAAG,EAAEN,SAAU;QACfO,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAI,CAAE;QACvBC,MAAM,EAAEC,OAAO,yCAAyC,CAAE;QAC1DC,IAAI,EAAE,KAAM;QACZC,QAAQ,EAAE;MAAM,CAEjB;IAAC,CACc;EAAC,CACf,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}