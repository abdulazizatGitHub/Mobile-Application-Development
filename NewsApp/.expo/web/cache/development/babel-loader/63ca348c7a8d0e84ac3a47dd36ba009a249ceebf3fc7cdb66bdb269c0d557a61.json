{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nvar DialogScrollArea = function DialogScrollArea(props) {\n  var theme = useInternalTheme(props.theme);\n  var borderStyles = {\n    borderColor: theme.isV3 ? theme.colors.surfaceVariant : 'rgba(0, 0, 0, .12)',\n    borderTopWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\n    borderBottomWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth\n  };\n  return React.createElement(View, _extends({}, props, {\n    style: [styles.container, borderStyles, theme.isV3 && styles.v3Container, props.style]\n  }), props.children);\n};\nDialogScrollArea.displayName = 'Dialog.ScrollArea';\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1\n  },\n  v3Container: {\n    marginBottom: 24\n  }\n});\nexport default DialogScrollArea;","map":{"version":3,"names":["React","StyleSheet","View","useInternalTheme","DialogScrollArea","props","theme","borderStyles","borderColor","isV3","colors","surfaceVariant","borderTopWidth","hairlineWidth","borderBottomWidth","createElement","_extends","style","styles","container","v3Container","children","displayName","create","paddingHorizontal","flexGrow","flexShrink","marginBottom"],"sources":["C:\\Users\\w5677\\Mobile-Application-Development\\NewsApp\\node_modules\\react-native-paper\\src\\components\\Dialog\\DialogScrollArea.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\r\n\r\nimport type { ThemeProp } from 'src/types';\r\n\r\nimport { useInternalTheme } from '../../core/theming';\r\n\r\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\r\n  /**\r\n   * Content of the `DialogScrollArea`.\r\n   */\r\n  children: React.ReactNode;\r\n  style?: StyleProp<ViewStyle>;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n};\r\n\r\n/**\r\n * A component to show a scrollable content in a Dialog. The component only provides appropriate styling.\r\n * For the scrollable content you can use `ScrollView`, `FlatList` etc. depending on your requirement.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { ScrollView } from 'react-native';\r\n * import { Dialog, Portal, Text } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => {\r\n *   const [visible, setVisible] = React.useState(false);\r\n *\r\n *   const hideDialog = () => setVisible(false);\r\n *\r\n *   return (\r\n *     <Portal>\r\n *       <Dialog visible={visible} onDismiss={hideDialog}>\r\n *         <Dialog.ScrollArea>\r\n *           <ScrollView contentContainerStyle={{paddingHorizontal: 24}}>\r\n *             <Text>This is a scrollable area</Text>\r\n *           </ScrollView>\r\n *         </Dialog.ScrollArea>\r\n *       </Dialog>\r\n *     </Portal>\r\n *   );\r\n * };\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst DialogScrollArea = (props: Props) => {\r\n  const theme = useInternalTheme(props.theme);\r\n  const borderStyles = {\r\n    borderColor: theme.isV3\r\n      ? theme.colors.surfaceVariant\r\n      : 'rgba(0, 0, 0, .12)',\r\n    borderTopWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\r\n    borderBottomWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\r\n  };\r\n  return (\r\n    <View\r\n      {...props}\r\n      style={[\r\n        styles.container,\r\n        borderStyles,\r\n        theme.isV3 && styles.v3Container,\r\n        props.style,\r\n      ]}\r\n    >\r\n      {props.children}\r\n    </View>\r\n  );\r\n};\r\n\r\nDialogScrollArea.displayName = 'Dialog.ScrollArea';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 24,\r\n    flexGrow: 1,\r\n    flexShrink: 1,\r\n  },\r\n  v3Container: {\r\n    marginBottom: 24,\r\n  },\r\n});\r\n\r\nexport default DialogScrollArea;\r\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAK9B,SAASC,gBAAgB;AA6CzB,IAAMC,gBAAgB,GAAI,SAApBA,gBAAgBA,CAAIC,KAAY,EAAK;EACzC,IAAMC,KAAK,GAAGH,gBAAgB,CAACE,KAAK,CAACC,KAAK,CAAC;EAC3C,IAAMC,YAAY,GAAG;IACnBC,WAAW,EAAEF,KAAK,CAACG,IAAI,GACnBH,KAAK,CAACI,MAAM,CAACC,cAAc,GAC3B,oBAAoB;IACxBC,cAAc,EAAEN,KAAK,CAACG,IAAI,GAAG,CAAC,GAAGR,UAAU,CAACY,aAAa;IACzDC,iBAAiB,EAAER,KAAK,CAACG,IAAI,GAAG,CAAC,GAAGR,UAAU,CAACY;EACjD,CAAC;EACD,OACEb,KAAA,CAAAe,aAAA,CAACb,IAAI,EAAAc,QAAA,KACCX,KAAK;IACTY,KAAK,EAAE,CACLC,MAAM,CAACC,SAAS,EAChBZ,YAAY,EACZD,KAAK,CAACG,IAAI,IAAIS,MAAM,CAACE,WAAW,EAChCf,KAAK,CAACY,KAAK;EACX,IAEDZ,KAAK,CAACgB,QACH,CAAC;AAEX,CAAC;AAEDjB,gBAAgB,CAACkB,WAAW,GAAG,mBAAmB;AAElD,IAAMJ,MAAM,GAAGjB,UAAU,CAACsB,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,iBAAiB,EAAE,EAAE;IACrBC,QAAQ,EAAE,CAAC;IACXC,UAAU,EAAE;EACd,CAAC;EACDN,WAAW,EAAE;IACXO,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAevB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}