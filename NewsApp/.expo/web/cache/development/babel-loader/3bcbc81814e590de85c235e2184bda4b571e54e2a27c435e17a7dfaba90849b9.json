{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"label\", \"accessibilityLabel\", \"accessibilityState\", \"color\", \"rippleColor\", \"disabled\", \"onPress\", \"onLongPress\", \"delayLongPress\", \"theme\", \"style\", \"visible\", \"uppercase\", \"testID\", \"animateFrom\", \"extended\", \"iconMode\", \"variant\", \"labelMaxFontSizeMultiplier\"],\n  _excluded2 = [\"backgroundColor\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { getCombinedStyles, getFABColors } from \"./utils\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport Icon from \"../Icon\";\nimport Surface from \"../Surface\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport AnimatedText from \"../Typography/AnimatedText\";\nvar SIZE = 56;\nvar SCALE = 0.9;\nvar AnimatedFAB = function AnimatedFAB(_ref) {\n  var icon = _ref.icon,\n    label = _ref.label,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,\n    accessibilityState = _ref.accessibilityState,\n    customColor = _ref.color,\n    customRippleColor = _ref.rippleColor,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    themeOverrides = _ref.theme,\n    style = _ref.style,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    uppercaseProp = _ref.uppercase,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'animated-fab' : _ref$testID,\n    _ref$animateFrom = _ref.animateFrom,\n    animateFrom = _ref$animateFrom === void 0 ? 'right' : _ref$animateFrom,\n    _ref$extended = _ref.extended,\n    extended = _ref$extended === void 0 ? false : _ref$extended,\n    _ref$iconMode = _ref.iconMode,\n    iconMode = _ref$iconMode === void 0 ? 'dynamic' : _ref$iconMode,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n    labelMaxFontSizeMultiplier = _ref.labelMaxFontSizeMultiplier,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var uppercase = uppercaseProp != null ? uppercaseProp : !theme.isV3;\n  var isIOS = Platform.OS === 'ios';\n  var isAnimatedFromRight = animateFrom === 'right';\n  var isIconStatic = iconMode === 'static';\n  var isRTL = I18nManager.isRTL;\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    visibility = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new Animated.Value(0)),\n    animFAB = _React$useRef2.current;\n  var isV3 = theme.isV3,\n    animation = theme.animation;\n  var scale = animation.scale;\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    textWidth = _React$useState2[0],\n    setTextWidth = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    textHeight = _React$useState4[0],\n    setTextHeight = _React$useState4[1];\n  var borderRadius = SIZE / (isV3 ? 3.5 : 2);\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n  var _ref3 = StyleSheet.flatten(style) || {},\n    customBackgroundColor = _ref3.backgroundColor,\n    restStyle = _objectWithoutProperties(_ref3, _excluded2);\n  var _getFABColors = getFABColors({\n      theme: theme,\n      variant: variant,\n      disabled: disabled,\n      customColor: customColor,\n      customBackgroundColor: customBackgroundColor\n    }),\n    backgroundColor = _getFABColors.backgroundColor,\n    foregroundColor = _getFABColors.foregroundColor;\n  var rippleColor = customRippleColor || color(foregroundColor).alpha(0.12).rgb().string();\n  var extendedWidth = textWidth + SIZE + borderRadius;\n  var distance = isAnimatedFromRight ? -textWidth - borderRadius : textWidth + borderRadius;\n  React.useEffect(function () {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n  var onTextLayout = function onTextLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    var currentHeight = Math.ceil(nativeEvent.lines[0].height);\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n      setTextWidth(currentWidth);\n    }\n  };\n  var propForDirection = function propForDirection(right) {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n    return right.reverse();\n  };\n  var combinedStyles = getCombinedStyles({\n    isAnimatedFromRight: isAnimatedFromRight,\n    isIconStatic: isIconStatic,\n    distance: distance,\n    animFAB: animFAB\n  });\n  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n  var textStyle = _objectSpread({\n    color: foregroundColor\n  }, font);\n  var md2Elevation = disabled || !isIOS ? 0 : 6;\n  var md3Elevation = disabled || !isIOS ? 0 : 3;\n  var shadowStyle = isV3 ? styles.v3Shadow : styles.shadow;\n  var baseStyle = [StyleSheet.absoluteFill, disabled ? styles.disabled : shadowStyle];\n  var newAccessibilityState = _objectSpread(_objectSpread({}, accessibilityState), {}, {\n    disabled: disabled\n  });\n  return React.createElement(Surface, _extends({}, rest, {\n    testID: `${testID}-container`,\n    style: [{\n      opacity: visibility,\n      transform: [{\n        scale: visibility\n      }],\n      borderRadius: borderRadius\n    }, !isV3 && {\n      elevation: md2Elevation\n    }, styles.container, restStyle]\n  }, isV3 && {\n    elevation: md3Elevation\n  }, {\n    theme: theme\n  }), React.createElement(Animated.View, {\n    style: [!isV3 && {\n      transform: [{\n        scaleY: animFAB.interpolate({\n          inputRange: propForDirection([distance, 0]),\n          outputRange: propForDirection([SCALE, 1])\n        })\n      }]\n    }, styles.standard, {\n      borderRadius: borderRadius\n    }]\n  }, React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.shadowWrapper]\n  }, React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [baseStyle, {\n      width: extendedWidth,\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.9 * distance, 0]),\n        outputRange: propForDirection([1, 0.15, 0])\n      }),\n      borderRadius: borderRadius\n    }],\n    testID: `${testID}-extended-shadow`\n  }), React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [baseStyle, {\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.9 * distance, 0]),\n        outputRange: propForDirection([0, 0.85, 1])\n      }),\n      width: SIZE,\n      borderRadius: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0]),\n        outputRange: propForDirection([SIZE / (extendedWidth / SIZE), borderRadius])\n      })\n    }, combinedStyles.absoluteFill],\n    testID: `${testID}-shadow`\n  })), React.createElement(Animated.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.innerWrapper, {\n      borderRadius: borderRadius\n    }]\n  }, React.createElement(Animated.View, {\n    style: [styles.standard, {\n      width: extendedWidth,\n      backgroundColor: backgroundColor,\n      borderRadius: borderRadius\n    }, combinedStyles.innerWrapper]\n  }, React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    rippleColor: rippleColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: newAccessibilityState,\n    testID: testID,\n    style: {\n      borderRadius: borderRadius\n    },\n    theme: theme\n  }, React.createElement(View, {\n    style: [styles.standard, {\n      width: extendedWidth,\n      borderRadius: borderRadius\n    }]\n  }))))), React.createElement(Animated.View, {\n    style: [styles.iconWrapper, combinedStyles.iconWrapper],\n    pointerEvents: \"none\"\n  }, React.createElement(Icon, {\n    source: icon,\n    size: 24,\n    color: foregroundColor,\n    theme: theme\n  })), React.createElement(View, {\n    pointerEvents: \"none\"\n  }, React.createElement(AnimatedText, {\n    variant: \"labelLarge\",\n    numberOfLines: 1,\n    onTextLayout: isIOS ? onTextLayout : undefined,\n    ellipsizeMode: 'tail',\n    style: [_defineProperty({}, isAnimatedFromRight || isRTL ? 'right' : 'left', isIconStatic ? textWidth - SIZE + borderRadius / (isV3 ? 1 : 2) : borderRadius), {\n      minWidth: textWidth,\n      top: -SIZE / 2 - textHeight / 2,\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.7 * distance, 0]),\n        outputRange: propForDirection([1, 0, 0])\n      }),\n      transform: [{\n        translateX: animFAB.interpolate({\n          inputRange: propForDirection([distance, 0]),\n          outputRange: propForDirection([0, SIZE])\n        })\n      }]\n    }, styles.label, uppercase && styles.uppercaseLabel, textStyle],\n    theme: theme,\n    testID: `${testID}-text`,\n    maxFontSizeMultiplier: labelMaxFontSizeMultiplier\n  }, label)), !isIOS && React.createElement(ScrollView, {\n    style: styles.textPlaceholderContainer\n  }, React.createElement(AnimatedText, {\n    variant: \"labelLarge\",\n    numberOfLines: 1,\n    onTextLayout: onTextLayout,\n    ellipsizeMode: 'tail',\n    style: [styles.label, uppercase && styles.uppercaseLabel, textStyle],\n    theme: theme\n  }, label)));\n};\nvar styles = StyleSheet.create({\n  standard: {\n    height: SIZE\n  },\n  disabled: {\n    elevation: 0\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  shadowWrapper: {\n    elevation: 0\n  },\n  shadow: {\n    elevation: 6\n  },\n  v3Shadow: {\n    elevation: 3\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE\n  },\n  label: {\n    position: 'absolute'\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute'\n  }\n});\nexport default AnimatedFAB;","map":{"version":3,"names":["React","Animated","Easing","I18nManager","Platform","ScrollView","StyleSheet","View","color","getCombinedStyles","getFABColors","useInternalTheme","Icon","Surface","TouchableRipple","AnimatedText","SIZE","SCALE","AnimatedFAB","_ref","icon","label","_ref$accessibilityLab","accessibilityLabel","accessibilityState","customColor","customRippleColor","rippleColor","disabled","onPress","onLongPress","delayLongPress","themeOverrides","theme","style","_ref$visible","visible","uppercaseProp","uppercase","_ref$testID","testID","_ref$animateFrom","animateFrom","_ref$extended","extended","_ref$iconMode","iconMode","_ref$variant","variant","labelMaxFontSizeMultiplier","rest","_objectWithoutProperties","_excluded","isV3","isIOS","OS","isAnimatedFromRight","isIconStatic","isRTL","_React$useRef","useRef","Value","visibility","current","_React$useRef2","animFAB","animation","scale","_React$useState","useState","_React$useState2","_slicedToArray","textWidth","setTextWidth","_React$useState3","_React$useState4","textHeight","setTextHeight","borderRadius","useEffect","timing","toValue","duration","useNativeDriver","start","_ref3","flatten","customBackgroundColor","backgroundColor","restStyle","_excluded2","_getFABColors","foregroundColor","alpha","rgb","string","extendedWidth","distance","easing","linear","onTextLayout","_ref2","nativeEvent","currentWidth","Math","ceil","lines","width","currentHeight","height","propForDirection","right","reverse","combinedStyles","font","fonts","labelLarge","medium","textStyle","_objectSpread","md2Elevation","md3Elevation","shadowStyle","styles","v3Shadow","shadow","baseStyle","absoluteFill","newAccessibilityState","createElement","_extends","opacity","transform","elevation","container","scaleY","interpolate","inputRange","outputRange","standard","shadowWrapper","pointerEvents","innerWrapper","borderless","accessibilityRole","iconWrapper","source","size","numberOfLines","undefined","ellipsizeMode","_defineProperty","minWidth","top","translateX","uppercaseLabel","maxFontSizeMultiplier","textPlaceholderContainer","create","position","flexDirection","overflow","alignItems","justifyContent","textTransform"],"sources":["C:\\Users\\w5677\\Mobile-Application-Development\\NewsApp\\node_modules\\react-native-paper\\src\\components\\FAB\\AnimatedFAB.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport type {\r\n  AccessibilityState,\r\n  ColorValue,\r\n  NativeSyntheticEvent,\r\n  TextLayoutEventData,\r\n} from 'react-native';\r\nimport {\r\n  Animated,\r\n  Easing,\r\n  GestureResponderEvent,\r\n  I18nManager,\r\n  Platform,\r\n  ScrollView,\r\n  StyleProp,\r\n  StyleSheet,\r\n  View,\r\n  ViewStyle,\r\n} from 'react-native';\r\n\r\nimport color from 'color';\r\n\r\nimport { getCombinedStyles, getFABColors } from './utils';\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport type { $Omit, $RemoveChildren, ThemeProp } from '../../types';\r\nimport type { IconSource } from '../Icon';\r\nimport Icon from '../Icon';\r\nimport Surface from '../Surface';\r\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\r\nimport AnimatedText from '../Typography/AnimatedText';\r\n\r\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\r\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\r\n\r\nexport type Props = $Omit<$RemoveChildren<typeof Surface>, 'mode'> & {\r\n  /**\r\n   * Icon to display for the `FAB`.\r\n   */\r\n  icon: IconSource;\r\n  /**\r\n   * Label for extended `FAB`.\r\n   */\r\n  label: string;\r\n  /**\r\n   * Make the label text uppercased.\r\n   */\r\n  uppercase?: boolean;\r\n  /**\r\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\r\n   * Uses `label` by default if specified.\r\n   */\r\n  accessibilityLabel?: string;\r\n  /**\r\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\r\n   */\r\n  accessibilityState?: AccessibilityState;\r\n  /**\r\n   * Custom color for the icon and label of the `FAB`.\r\n   */\r\n  color?: string;\r\n  /**\r\n   * Color of the ripple effect.\r\n   */\r\n  rippleColor?: ColorValue;\r\n  /**\r\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\r\n   */\r\n  disabled?: boolean;\r\n  /**\r\n   * Whether `FAB` is currently visible.\r\n   */\r\n  visible?: boolean;\r\n  /**\r\n   * Function to execute on press.\r\n   */\r\n  onPress?: (e: GestureResponderEvent) => void;\r\n  /**\r\n   * Function to execute on long press.\r\n   */\r\n  onLongPress?: (e: GestureResponderEvent) => void;\r\n  /**\r\n   * The number of milliseconds a user must touch the element before executing `onLongPress`.\r\n   */\r\n  delayLongPress?: number;\r\n  /**\r\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\r\n   */\r\n  iconMode?: AnimatedFABIconMode;\r\n  /**\r\n   * Indicates from which direction animation should be performed. The default value is `right`.\r\n   */\r\n  animateFrom?: AnimatedFABAnimateFrom;\r\n  /**\r\n   * Whether `FAB` should start animation to extend.\r\n   */\r\n  extended: boolean;\r\n  /**\r\n   * Specifies the largest possible scale a label font can reach.\r\n   */\r\n  labelMaxFontSizeMultiplier?: number;\r\n  /**\r\n   * @supported Available in v5.x with theme version 3\r\n   *\r\n   * Color mappings variant for combinations of container and icon colors.\r\n   */\r\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\r\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n  /**\r\n   * TestID used for testing purposes\r\n   */\r\n  testID?: string;\r\n};\r\n\r\nconst SIZE = 56;\r\nconst SCALE = 0.9;\r\n\r\n/**\r\n * An animated, extending horizontally floating action button represents the primary action in an application.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import React from 'react';\r\n * import {\r\n *   StyleProp,\r\n *   ViewStyle,\r\n *   Animated,\r\n *   StyleSheet,\r\n *   Platform,\r\n *   ScrollView,\r\n *   Text,\r\n *   SafeAreaView,\r\n *   I18nManager,\r\n * } from 'react-native';\r\n * import { AnimatedFAB } from 'react-native-paper';\r\n *\r\n * const MyComponent = ({\r\n *   animatedValue,\r\n *   visible,\r\n *   extended,\r\n *   label,\r\n *   animateFrom,\r\n *   style,\r\n *   iconMode,\r\n * }) => {\r\n *   const [isExtended, setIsExtended] = React.useState(true);\r\n *\r\n *   const isIOS = Platform.OS === 'ios';\r\n *\r\n *   const onScroll = ({ nativeEvent }) => {\r\n *     const currentScrollPosition =\r\n *       Math.floor(nativeEvent?.contentOffset?.y) ?? 0;\r\n *\r\n *     setIsExtended(currentScrollPosition <= 0);\r\n *   };\r\n *\r\n *   const fabStyle = { [animateFrom]: 16 };\r\n *\r\n *   return (\r\n *     <SafeAreaView style={styles.container}>\r\n *       <ScrollView onScroll={onScroll}>\r\n *         {[...new Array(100).keys()].map((_, i) => (\r\n *           <Text>{i}</Text>\r\n *         ))}\r\n *       </ScrollView>\r\n *       <AnimatedFAB\r\n *         icon={'plus'}\r\n *         label={'Label'}\r\n *         extended={isExtended}\r\n *         onPress={() => console.log('Pressed')}\r\n *         visible={visible}\r\n *         animateFrom={'right'}\r\n *         iconMode={'static'}\r\n *         style={[styles.fabStyle, style, fabStyle]}\r\n *       />\r\n *     </SafeAreaView>\r\n *   );\r\n * };\r\n *\r\n * export default MyComponent;\r\n *\r\n * const styles = StyleSheet.create({\r\n *   container: {\r\n *     flexGrow: 1,\r\n *   },\r\n *   fabStyle: {\r\n *     bottom: 16,\r\n *     right: 16,\r\n *     position: 'absolute',\r\n *   },\r\n * });\r\n * ```\r\n */\r\nconst AnimatedFAB = ({\r\n  icon,\r\n  label,\r\n  accessibilityLabel = label,\r\n  accessibilityState,\r\n  color: customColor,\r\n  rippleColor: customRippleColor,\r\n  disabled,\r\n  onPress,\r\n  onLongPress,\r\n  delayLongPress,\r\n  theme: themeOverrides,\r\n  style,\r\n  visible = true,\r\n  uppercase: uppercaseProp,\r\n  testID = 'animated-fab',\r\n  animateFrom = 'right',\r\n  extended = false,\r\n  iconMode = 'dynamic',\r\n  variant = 'primary',\r\n  labelMaxFontSizeMultiplier,\r\n  ...rest\r\n}: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n  const uppercase: boolean = uppercaseProp ?? !theme.isV3;\r\n  const isIOS = Platform.OS === 'ios';\r\n  const isAnimatedFromRight = animateFrom === 'right';\r\n  const isIconStatic = iconMode === 'static';\r\n  const { isRTL } = I18nManager;\r\n  const { current: visibility } = React.useRef<Animated.Value>(\r\n    new Animated.Value(visible ? 1 : 0)\r\n  );\r\n  const { current: animFAB } = React.useRef<Animated.Value>(\r\n    new Animated.Value(0)\r\n  );\r\n  const { isV3, animation } = theme;\r\n  const { scale } = animation;\r\n\r\n  const [textWidth, setTextWidth] = React.useState<number>(0);\r\n  const [textHeight, setTextHeight] = React.useState<number>(0);\r\n\r\n  const borderRadius = SIZE / (isV3 ? 3.5 : 2);\r\n\r\n  React.useEffect(() => {\r\n    if (visible) {\r\n      Animated.timing(visibility, {\r\n        toValue: 1,\r\n        duration: 200 * scale,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(visibility, {\r\n        toValue: 0,\r\n        duration: 150 * scale,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, [visible, scale, visibility]);\r\n\r\n  const { backgroundColor: customBackgroundColor, ...restStyle } =\r\n    (StyleSheet.flatten(style) || {}) as ViewStyle;\r\n\r\n  const { backgroundColor, foregroundColor } = getFABColors({\r\n    theme,\r\n    variant,\r\n    disabled,\r\n    customColor,\r\n    customBackgroundColor,\r\n  });\r\n\r\n  const rippleColor =\r\n    customRippleColor || color(foregroundColor).alpha(0.12).rgb().string();\r\n\r\n  const extendedWidth = textWidth + SIZE + borderRadius;\r\n\r\n  const distance = isAnimatedFromRight\r\n    ? -textWidth - borderRadius\r\n    : textWidth + borderRadius;\r\n\r\n  React.useEffect(() => {\r\n    Animated.timing(animFAB, {\r\n      toValue: !extended ? 0 : distance,\r\n      duration: 150 * scale,\r\n      useNativeDriver: true,\r\n      easing: Easing.linear,\r\n    }).start();\r\n  }, [animFAB, scale, distance, extended]);\r\n\r\n  const onTextLayout = ({\r\n    nativeEvent,\r\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\r\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\r\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\r\n\r\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\r\n      setTextHeight(currentHeight);\r\n\r\n      if (isIOS) {\r\n        return setTextWidth(currentWidth - 12);\r\n      }\r\n\r\n      setTextWidth(currentWidth);\r\n    }\r\n  };\r\n\r\n  const propForDirection = <T,>(right: T[]): T[] => {\r\n    if (isAnimatedFromRight) {\r\n      return right;\r\n    }\r\n\r\n    return right.reverse();\r\n  };\r\n\r\n  const combinedStyles = getCombinedStyles({\r\n    isAnimatedFromRight,\r\n    isIconStatic,\r\n    distance,\r\n    animFAB,\r\n  });\r\n\r\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\r\n\r\n  const textStyle = {\r\n    color: foregroundColor,\r\n    ...font,\r\n  };\r\n\r\n  const md2Elevation = disabled || !isIOS ? 0 : 6;\r\n  const md3Elevation = disabled || !isIOS ? 0 : 3;\r\n\r\n  const shadowStyle = isV3 ? styles.v3Shadow : styles.shadow;\r\n  const baseStyle = [\r\n    StyleSheet.absoluteFill,\r\n    disabled ? styles.disabled : shadowStyle,\r\n  ];\r\n\r\n  const newAccessibilityState = { ...accessibilityState, disabled };\r\n\r\n  return (\r\n    <Surface\r\n      {...rest}\r\n      testID={`${testID}-container`}\r\n      style={[\r\n        {\r\n          opacity: visibility,\r\n          transform: [\r\n            {\r\n              scale: visibility,\r\n            },\r\n          ],\r\n          borderRadius,\r\n        },\r\n        !isV3 && {\r\n          elevation: md2Elevation,\r\n        },\r\n        styles.container,\r\n        restStyle,\r\n      ]}\r\n      {...(isV3 && { elevation: md3Elevation })}\r\n      theme={theme}\r\n    >\r\n      <Animated.View\r\n        style={[\r\n          !isV3 && {\r\n            transform: [\r\n              {\r\n                scaleY: animFAB.interpolate({\r\n                  inputRange: propForDirection([distance, 0]),\r\n                  outputRange: propForDirection([SCALE, 1]),\r\n                }),\r\n              },\r\n            ],\r\n          },\r\n          styles.standard,\r\n          { borderRadius },\r\n        ]}\r\n      >\r\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\r\n          <Animated.View\r\n            pointerEvents=\"none\"\r\n            style={[\r\n              baseStyle,\r\n              {\r\n                width: extendedWidth,\r\n                opacity: animFAB.interpolate({\r\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\r\n                  outputRange: propForDirection([1, 0.15, 0]),\r\n                }),\r\n                borderRadius,\r\n              },\r\n            ]}\r\n            testID={`${testID}-extended-shadow`}\r\n          />\r\n          <Animated.View\r\n            pointerEvents=\"none\"\r\n            style={[\r\n              baseStyle,\r\n              {\r\n                opacity: animFAB.interpolate({\r\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\r\n                  outputRange: propForDirection([0, 0.85, 1]),\r\n                }),\r\n                width: SIZE,\r\n                borderRadius: animFAB.interpolate({\r\n                  inputRange: propForDirection([distance, 0]),\r\n                  outputRange: propForDirection([\r\n                    SIZE / (extendedWidth / SIZE),\r\n                    borderRadius,\r\n                  ]),\r\n                }),\r\n              },\r\n              combinedStyles.absoluteFill,\r\n            ]}\r\n            testID={`${testID}-shadow`}\r\n          />\r\n        </View>\r\n        <Animated.View\r\n          pointerEvents=\"box-none\"\r\n          style={[styles.innerWrapper, { borderRadius }]}\r\n        >\r\n          <Animated.View\r\n            style={[\r\n              styles.standard,\r\n              {\r\n                width: extendedWidth,\r\n                backgroundColor,\r\n                borderRadius,\r\n              },\r\n              combinedStyles.innerWrapper,\r\n            ]}\r\n          >\r\n            <TouchableRipple\r\n              borderless\r\n              onPress={onPress}\r\n              onLongPress={onLongPress}\r\n              delayLongPress={delayLongPress}\r\n              rippleColor={rippleColor}\r\n              disabled={disabled}\r\n              accessibilityLabel={accessibilityLabel}\r\n              accessibilityRole=\"button\"\r\n              accessibilityState={newAccessibilityState}\r\n              testID={testID}\r\n              style={{ borderRadius }}\r\n              theme={theme}\r\n            >\r\n              <View\r\n                style={[\r\n                  styles.standard,\r\n                  {\r\n                    width: extendedWidth,\r\n                    borderRadius,\r\n                  },\r\n                ]}\r\n              />\r\n            </TouchableRipple>\r\n          </Animated.View>\r\n        </Animated.View>\r\n      </Animated.View>\r\n\r\n      <Animated.View\r\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\r\n        pointerEvents=\"none\"\r\n      >\r\n        <Icon source={icon} size={24} color={foregroundColor} theme={theme} />\r\n      </Animated.View>\r\n\r\n      <View pointerEvents=\"none\">\r\n        <AnimatedText\r\n          variant=\"labelLarge\"\r\n          numberOfLines={1}\r\n          onTextLayout={isIOS ? onTextLayout : undefined}\r\n          ellipsizeMode={'tail'}\r\n          style={[\r\n            {\r\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\r\n                ? textWidth - SIZE + borderRadius / (isV3 ? 1 : 2)\r\n                : borderRadius,\r\n            },\r\n            {\r\n              minWidth: textWidth,\r\n              top: -SIZE / 2 - textHeight / 2,\r\n              opacity: animFAB.interpolate({\r\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\r\n                outputRange: propForDirection([1, 0, 0]),\r\n              }) as unknown as number,\r\n              // TODO: check\r\n              transform: [\r\n                {\r\n                  translateX: animFAB.interpolate({\r\n                    inputRange: propForDirection([distance, 0]),\r\n                    outputRange: propForDirection([0, SIZE]),\r\n                  }),\r\n                },\r\n              ],\r\n            },\r\n            styles.label,\r\n            uppercase && styles.uppercaseLabel,\r\n            textStyle,\r\n          ]}\r\n          theme={theme}\r\n          testID={`${testID}-text`}\r\n          maxFontSizeMultiplier={labelMaxFontSizeMultiplier}\r\n        >\r\n          {label}\r\n        </AnimatedText>\r\n      </View>\r\n\r\n      {!isIOS && (\r\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\r\n        // however during render the text in `FAB` isn't fully visible. In order to get\r\n        // proper text measurements there is a need to additionaly render that text, but\r\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\r\n        <ScrollView style={styles.textPlaceholderContainer}>\r\n          <AnimatedText\r\n            variant=\"labelLarge\"\r\n            numberOfLines={1}\r\n            onTextLayout={onTextLayout}\r\n            ellipsizeMode={'tail'}\r\n            style={[\r\n              styles.label,\r\n              uppercase && styles.uppercaseLabel,\r\n              textStyle,\r\n            ]}\r\n            theme={theme}\r\n          >\r\n            {label}\r\n          </AnimatedText>\r\n        </ScrollView>\r\n      )}\r\n    </Surface>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  standard: {\r\n    height: SIZE,\r\n  },\r\n  disabled: {\r\n    elevation: 0,\r\n  },\r\n  // eslint-disable-next-line react-native/no-color-literals\r\n  container: {\r\n    position: 'absolute',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  innerWrapper: {\r\n    flexDirection: 'row',\r\n    overflow: 'hidden',\r\n  },\r\n  shadowWrapper: {\r\n    elevation: 0,\r\n  },\r\n  shadow: {\r\n    elevation: 6,\r\n  },\r\n  v3Shadow: {\r\n    elevation: 3,\r\n  },\r\n  iconWrapper: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    height: SIZE,\r\n    width: SIZE,\r\n  },\r\n  label: {\r\n    position: 'absolute',\r\n  },\r\n  uppercaseLabel: {\r\n    textTransform: 'uppercase',\r\n  },\r\n  textPlaceholderContainer: {\r\n    height: 0,\r\n    position: 'absolute',\r\n  },\r\n});\r\n\r\nexport default AnimatedFAB;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}