{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"type\", \"visible\", \"theme\", \"onLayout\", \"padding\", \"disabled\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { getTextColor } from \"./utils\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport AnimatedText from \"../Typography/AnimatedText\";\nvar HelperText = function HelperText(_ref) {\n  var style = _ref.style,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'info' : _ref$type,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    themeOverrides = _ref.theme,\n    onLayout = _ref.onLayout,\n    _ref$padding = _ref.padding,\n    padding = _ref$padding === void 0 ? 'normal' : _ref$padding,\n    disabled = _ref.disabled,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    shown = _React$useRef.current;\n  var _React$useRef2 = React.useRef(0),\n    textHeight = _React$useRef2.current;\n  var scale = theme.animation.scale;\n  var _rest$maxFontSizeMult = rest.maxFontSizeMultiplier,\n    maxFontSizeMultiplier = _rest$maxFontSizeMult === void 0 ? 1.5 : _rest$maxFontSizeMult;\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(shown, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(shown, {\n        toValue: 0,\n        duration: 180 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, shown]);\n  var handleTextLayout = function handleTextLayout(e) {\n    onLayout === null || onLayout === void 0 ? void 0 : onLayout(e);\n    textHeight = e.nativeEvent.layout.height;\n  };\n  var textColor = getTextColor({\n    theme: theme,\n    disabled: disabled,\n    type: type\n  });\n  return React.createElement(AnimatedText, _extends({\n    onLayout: handleTextLayout,\n    style: [styles.text, padding !== 'none' ? styles.padding : {}, {\n      color: textColor,\n      opacity: shown,\n      transform: visible && type === 'error' ? [{\n        translateY: shown.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-textHeight / 2, 0]\n        })\n      }] : []\n    }, style],\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, rest), rest.children);\n};\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4\n  },\n  padding: {\n    paddingHorizontal: 12\n  }\n});\nexport default HelperText;","map":{"version":3,"names":["React","Animated","StyleSheet","getTextColor","useInternalTheme","AnimatedText","HelperText","_ref","style","_ref$type","type","_ref$visible","visible","themeOverrides","theme","onLayout","_ref$padding","padding","disabled","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","Value","shown","current","_React$useRef2","textHeight","scale","animation","_rest$maxFontSizeMult","maxFontSizeMultiplier","useEffect","timing","toValue","duration","useNativeDriver","start","handleTextLayout","e","nativeEvent","layout","height","textColor","createElement","_extends","styles","text","color","opacity","transform","translateY","interpolate","inputRange","outputRange","children","create","fontSize","paddingVertical","paddingHorizontal"],"sources":["E:\\Mobile-Application-Development\\NewsApp\\node_modules\\react-native-paper\\src\\components\\HelperText\\HelperText.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Animated,\r\n  LayoutChangeEvent,\r\n  StyleProp,\r\n  StyleSheet,\r\n  TextStyle,\r\n} from 'react-native';\r\n\r\nimport { getTextColor } from './utils';\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport type { $Omit, ThemeProp } from '../../types';\r\nimport AnimatedText from '../Typography/AnimatedText';\r\n\r\nexport type Props = $Omit<\r\n  $Omit<React.ComponentPropsWithRef<typeof AnimatedText>, 'padding'>,\r\n  'type'\r\n> & {\r\n  /**\r\n   * Type of the helper text.\r\n   */\r\n  type: 'error' | 'info';\r\n  /**\r\n   * Text content of the HelperText.\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * Whether to display the helper text.\r\n   */\r\n  visible?: boolean;\r\n  /**\r\n   * Whether to apply padding to the helper text.\r\n   */\r\n  padding?: 'none' | 'normal';\r\n  /**\r\n   * Whether the text input tied with helper text is disabled.\r\n   */\r\n  disabled?: boolean;\r\n  style?: StyleProp<TextStyle>;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n  /**\r\n   * TestID used for testing purposes\r\n   */\r\n  testID?: string;\r\n};\r\n\r\n/**\r\n * Helper text is used in conjuction with input elements to provide additional hints for the user.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View } from 'react-native';\r\n * import { HelperText, TextInput } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => {\r\n *   const [text, setText] = React.useState('');\r\n *\r\n *    const onChangeText = text => setText(text);\r\n *\r\n *   const hasErrors = () => {\r\n *     return !text.includes('@');\r\n *   };\r\n *\r\n *  return (\r\n *     <View>\r\n *       <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\r\n *       <HelperText type=\"error\" visible={hasErrors()}>\r\n *         Email address is invalid!\r\n *       </HelperText>\r\n *     </View>\r\n *   );\r\n * };\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst HelperText = ({\r\n  style,\r\n  type = 'info',\r\n  visible = true,\r\n  theme: themeOverrides,\r\n  onLayout,\r\n  padding = 'normal',\r\n  disabled,\r\n  ...rest\r\n}: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n  const { current: shown } = React.useRef<Animated.Value>(\r\n    new Animated.Value(visible ? 1 : 0)\r\n  );\r\n\r\n  let { current: textHeight } = React.useRef<number>(0);\r\n\r\n  const { scale } = theme.animation;\r\n\r\n  const { maxFontSizeMultiplier = 1.5 } = rest;\r\n\r\n  React.useEffect(() => {\r\n    if (visible) {\r\n      // show text\r\n      Animated.timing(shown, {\r\n        toValue: 1,\r\n        duration: 150 * scale,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    } else {\r\n      // hide text\r\n      Animated.timing(shown, {\r\n        toValue: 0,\r\n        duration: 180 * scale,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    }\r\n  }, [visible, scale, shown]);\r\n\r\n  const handleTextLayout = (e: LayoutChangeEvent) => {\r\n    onLayout?.(e);\r\n    textHeight = e.nativeEvent.layout.height;\r\n  };\r\n\r\n  const textColor = getTextColor({ theme, disabled, type });\r\n\r\n  return (\r\n    <AnimatedText\r\n      onLayout={handleTextLayout}\r\n      style={[\r\n        styles.text,\r\n        padding !== 'none' ? styles.padding : {},\r\n        {\r\n          color: textColor,\r\n          opacity: shown,\r\n          transform:\r\n            visible && type === 'error'\r\n              ? [\r\n                  {\r\n                    translateY: shown.interpolate({\r\n                      inputRange: [0, 1],\r\n                      outputRange: [-textHeight / 2, 0],\r\n                    }),\r\n                  },\r\n                ]\r\n              : [],\r\n        },\r\n        style,\r\n      ]}\r\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\r\n      {...rest}\r\n    >\r\n      {rest.children}\r\n    </AnimatedText>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    fontSize: 12,\r\n    paddingVertical: 4,\r\n  },\r\n  padding: {\r\n    paddingHorizontal: 12,\r\n  },\r\n});\r\n\r\nexport default HelperText;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}