{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { createTheming } from '@callstack/react-theme-provider';\nimport color from 'color';\nimport { MD2DarkTheme, MD2LightTheme, MD3DarkTheme, MD3LightTheme } from \"../styles/themes\";\nexport var DefaultTheme = MD3LightTheme;\nvar _createTheming = createTheming(MD3LightTheme),\n  ThemeProvider = _createTheming.ThemeProvider,\n  withTheme = _createTheming.withTheme,\n  useAppTheme = _createTheming.useTheme;\nexport { ThemeProvider, withTheme, useAppTheme };\nexport function useTheme(overrides) {\n  return useAppTheme(overrides);\n}\nexport var useInternalTheme = function useInternalTheme(themeOverrides) {\n  return useAppTheme(themeOverrides);\n};\nexport var withInternalTheme = function withInternalTheme(WrappedComponent) {\n  return withTheme(WrappedComponent);\n};\nexport var defaultThemesByVersion = {\n  2: {\n    light: MD2LightTheme,\n    dark: MD2DarkTheme\n  },\n  3: {\n    light: MD3LightTheme,\n    dark: MD3DarkTheme\n  }\n};\nexport var getTheme = function getTheme() {\n  var isDark = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var isV3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var themeVersion = isV3 ? 3 : 2;\n  var scheme = isDark ? 'dark' : 'light';\n  return defaultThemesByVersion[themeVersion][scheme];\n};\nexport function adaptNavigationTheme(themes) {\n  var reactNavigationLight = themes.reactNavigationLight,\n    reactNavigationDark = themes.reactNavigationDark,\n    materialLight = themes.materialLight,\n    materialDark = themes.materialDark;\n  var getAdaptedTheme = function getAdaptedTheme(navigationTheme, MD3Theme) {\n    return _objectSpread(_objectSpread({}, navigationTheme), {}, {\n      colors: _objectSpread(_objectSpread({}, navigationTheme.colors), {}, {\n        primary: MD3Theme.colors.primary,\n        background: MD3Theme.colors.background,\n        card: MD3Theme.colors.elevation.level2,\n        text: MD3Theme.colors.onSurface,\n        border: MD3Theme.colors.outline,\n        notification: MD3Theme.colors.error\n      })\n    });\n  };\n  var MD3Themes = {\n    light: materialLight || MD3LightTheme,\n    dark: materialDark || MD3DarkTheme\n  };\n  if (reactNavigationLight && reactNavigationDark) {\n    var modes = ['light', 'dark'];\n    var NavigationThemes = {\n      light: reactNavigationLight,\n      dark: reactNavigationDark\n    };\n    var _modes$reduce = modes.reduce(function (prev, curr) {\n        return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, curr, getAdaptedTheme(NavigationThemes[curr], MD3Themes[curr])));\n      }, {\n        light: reactNavigationLight,\n        dark: reactNavigationDark\n      }),\n      adaptedLight = _modes$reduce.light,\n      adaptedDark = _modes$reduce.dark;\n    return {\n      LightTheme: adaptedLight,\n      DarkTheme: adaptedDark\n    };\n  }\n  if (reactNavigationDark) {\n    return {\n      DarkTheme: getAdaptedTheme(reactNavigationDark, MD3Themes.dark)\n    };\n  }\n  return {\n    LightTheme: getAdaptedTheme(reactNavigationLight, MD3Themes.light)\n  };\n}\nexport var getDynamicThemeElevations = function getDynamicThemeElevations(scheme) {\n  var elevationValues = ['transparent', 0.05, 0.08, 0.11, 0.12, 0.14];\n  return elevationValues.reduce(function (elevations, elevationValue, index) {\n    return _objectSpread(_objectSpread({}, elevations), {}, _defineProperty({}, `level${index}`, index === 0 ? elevationValue : color(scheme.surface).mix(color(scheme.primary), elevationValue).rgb().string()));\n  }, {});\n};","map":{"version":3,"names":["createTheming","color","MD2DarkTheme","MD2LightTheme","MD3DarkTheme","MD3LightTheme","DefaultTheme","_createTheming","ThemeProvider","withTheme","useAppTheme","useTheme","overrides","useInternalTheme","themeOverrides","withInternalTheme","WrappedComponent","defaultThemesByVersion","light","dark","getTheme","isDark","arguments","length","undefined","isV3","themeVersion","scheme","adaptNavigationTheme","themes","reactNavigationLight","reactNavigationDark","materialLight","materialDark","getAdaptedTheme","navigationTheme","MD3Theme","_objectSpread","colors","primary","background","card","elevation","level2","text","onSurface","border","outline","notification","error","MD3Themes","modes","NavigationThemes","_modes$reduce","reduce","prev","curr","_defineProperty","adaptedLight","adaptedDark","LightTheme","DarkTheme","getDynamicThemeElevations","elevationValues","elevations","elevationValue","index","surface","mix","rgb","string"],"sources":["C:\\Users\\w5677\\Mobile-Application-Development\\NewsApp\\node_modules\\react-native-paper\\src\\core\\theming.tsx"],"sourcesContent":["import type { ComponentType } from 'react';\r\n\r\nimport { $DeepPartial, createTheming } from '@callstack/react-theme-provider';\r\nimport color from 'color';\r\n\r\nimport {\r\n  MD2DarkTheme,\r\n  MD2LightTheme,\r\n  MD3DarkTheme,\r\n  MD3LightTheme,\r\n} from '../styles/themes';\r\nimport type {\r\n  InternalTheme,\r\n  MD3Theme,\r\n  MD3AndroidColors,\r\n  NavigationTheme,\r\n} from '../types';\r\n\r\nexport const DefaultTheme = MD3LightTheme;\r\n\r\nexport const {\r\n  ThemeProvider,\r\n  withTheme,\r\n  useTheme: useAppTheme,\r\n} = createTheming<unknown>(MD3LightTheme);\r\n\r\nexport function useTheme<T = MD3Theme>(overrides?: $DeepPartial<T>) {\r\n  return useAppTheme<T>(overrides);\r\n}\r\n\r\nexport const useInternalTheme = (\r\n  themeOverrides: $DeepPartial<InternalTheme> | undefined\r\n) => useAppTheme<InternalTheme>(themeOverrides);\r\n\r\nexport const withInternalTheme = <Props extends { theme: InternalTheme }, C>(\r\n  WrappedComponent: ComponentType<Props & { theme: InternalTheme }> & C\r\n) => withTheme<Props, C>(WrappedComponent);\r\n\r\nexport const defaultThemesByVersion = {\r\n  2: {\r\n    light: MD2LightTheme,\r\n    dark: MD2DarkTheme,\r\n  },\r\n  3: {\r\n    light: MD3LightTheme,\r\n    dark: MD3DarkTheme,\r\n  },\r\n};\r\n\r\nexport const getTheme = <\r\n  Scheme extends boolean = false,\r\n  IsVersion3 extends boolean = true\r\n>(\r\n  isDark: Scheme = false as Scheme,\r\n  isV3: IsVersion3 = true as IsVersion3\r\n): (typeof defaultThemesByVersion)[IsVersion3 extends true\r\n  ? 3\r\n  : 2][Scheme extends true ? 'dark' : 'light'] => {\r\n  const themeVersion = isV3 ? 3 : 2;\r\n  const scheme = isDark ? 'dark' : 'light';\r\n\r\n  return defaultThemesByVersion[themeVersion][scheme];\r\n};\r\n\r\n// eslint-disable-next-line no-redeclare\r\nexport function adaptNavigationTheme(themes: {\r\n  reactNavigationLight: NavigationTheme;\r\n  materialLight?: MD3Theme;\r\n}): {\r\n  LightTheme: NavigationTheme;\r\n};\r\n// eslint-disable-next-line no-redeclare\r\nexport function adaptNavigationTheme(themes: {\r\n  reactNavigationDark: NavigationTheme;\r\n  materialDark?: MD3Theme;\r\n}): {\r\n  DarkTheme: NavigationTheme;\r\n};\r\n// eslint-disable-next-line no-redeclare\r\nexport function adaptNavigationTheme(themes: {\r\n  reactNavigationLight: NavigationTheme;\r\n  reactNavigationDark: NavigationTheme;\r\n  materialLight?: MD3Theme;\r\n  materialDark?: MD3Theme;\r\n}): { LightTheme: NavigationTheme; DarkTheme: NavigationTheme };\r\n// eslint-disable-next-line no-redeclare\r\nexport function adaptNavigationTheme(themes: any) {\r\n  const {\r\n    reactNavigationLight,\r\n    reactNavigationDark,\r\n    materialLight,\r\n    materialDark,\r\n  } = themes;\r\n\r\n  const getAdaptedTheme = (\r\n    navigationTheme: NavigationTheme,\r\n    MD3Theme: MD3Theme\r\n  ) => {\r\n    return {\r\n      ...navigationTheme,\r\n      colors: {\r\n        ...navigationTheme.colors,\r\n        primary: MD3Theme.colors.primary,\r\n        background: MD3Theme.colors.background,\r\n        card: MD3Theme.colors.elevation.level2,\r\n        text: MD3Theme.colors.onSurface,\r\n        border: MD3Theme.colors.outline,\r\n        notification: MD3Theme.colors.error,\r\n      },\r\n    };\r\n  };\r\n\r\n  const MD3Themes = {\r\n    light: materialLight || MD3LightTheme,\r\n    dark: materialDark || MD3DarkTheme,\r\n  };\r\n\r\n  if (reactNavigationLight && reactNavigationDark) {\r\n    const modes = ['light', 'dark'] as const;\r\n\r\n    const NavigationThemes = {\r\n      light: reactNavigationLight,\r\n      dark: reactNavigationDark,\r\n    };\r\n\r\n    const { light: adaptedLight, dark: adaptedDark } = modes.reduce(\r\n      (prev, curr) => {\r\n        return {\r\n          ...prev,\r\n          [curr]: getAdaptedTheme(NavigationThemes[curr], MD3Themes[curr]),\r\n        };\r\n      },\r\n      {\r\n        light: reactNavigationLight,\r\n        dark: reactNavigationDark,\r\n      }\r\n    );\r\n\r\n    return {\r\n      LightTheme: adaptedLight,\r\n      DarkTheme: adaptedDark,\r\n    };\r\n  }\r\n\r\n  if (reactNavigationDark) {\r\n    return {\r\n      DarkTheme: getAdaptedTheme(reactNavigationDark, MD3Themes.dark),\r\n    };\r\n  }\r\n\r\n  return {\r\n    LightTheme: getAdaptedTheme(reactNavigationLight, MD3Themes.light),\r\n  };\r\n}\r\n\r\nexport const getDynamicThemeElevations = (scheme: MD3AndroidColors) => {\r\n  const elevationValues = ['transparent', 0.05, 0.08, 0.11, 0.12, 0.14];\r\n  return elevationValues.reduce((elevations, elevationValue, index) => {\r\n    return {\r\n      ...elevations,\r\n      [`level${index}`]:\r\n        index === 0\r\n          ? elevationValue\r\n          : color(scheme.surface)\r\n              .mix(color(scheme.primary), elevationValue as number)\r\n              .rgb()\r\n              .string(),\r\n    };\r\n  }, {});\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}