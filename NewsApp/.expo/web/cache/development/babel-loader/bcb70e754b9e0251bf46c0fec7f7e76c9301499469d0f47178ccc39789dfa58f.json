{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"numeric\", \"children\", \"onPress\", \"sortDirection\", \"textStyle\", \"style\", \"theme\", \"numberOfLines\", \"maxFontSizeMultiplier\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport Text from \"../Typography/Text\";\nvar DataTableTitle = function DataTableTitle(_ref) {\n  var _theme$colors;\n  var numeric = _ref.numeric,\n    children = _ref.children,\n    onPress = _ref.onPress,\n    sortDirection = _ref.sortDirection,\n    textStyle = _ref.textStyle,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    _ref$numberOfLines = _ref.numberOfLines,\n    numberOfLines = _ref$numberOfLines === void 0 ? 1 : _ref$numberOfLines,\n    maxFontSizeMultiplier = _ref.maxFontSizeMultiplier,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var _React$useRef = React.useRef(new Animated.Value(sortDirection === 'ascending' ? 0 : 1)),\n    spinAnim = _React$useRef.current;\n  React.useEffect(function () {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true\n    }).start();\n  }, [sortDirection, spinAnim]);\n  var textColor = theme.isV3 ? theme.colors.onSurface : theme === null || theme === void 0 || (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.text;\n  var alphaTextColor = color(textColor).alpha(0.6).rgb().string();\n  var spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg']\n  });\n  var icon = sortDirection ? React.createElement(Animated.View, {\n    style: [styles.icon, {\n      transform: [{\n        rotate: spin\n      }]\n    }]\n  }, React.createElement(MaterialCommunityIcon, {\n    name: \"arrow-up\",\n    size: 16,\n    color: textColor,\n    direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n  })) : null;\n  return React.createElement(TouchableWithoutFeedback, _extends({\n    disabled: !onPress,\n    onPress: onPress\n  }, rest), React.createElement(View, {\n    style: [styles.container, numeric && styles.right, style]\n  }, icon, React.createElement(Text, {\n    style: [styles.cell, {\n      maxHeight: 24 * numberOfLines\n    }, numberOfLines > 1 ? numeric ? I18nManager.getConstants().isRTL ? styles.leftText : styles.rightText : styles.centerText : {}, sortDirection ? styles.sorted : {\n      color: alphaTextColor\n    }, textStyle],\n    numberOfLines: numberOfLines,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, children)));\n};\nDataTableTitle.displayName = 'DataTable.Title';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12\n  },\n  rightText: {\n    textAlign: 'right'\n  },\n  leftText: {\n    textAlign: 'left'\n  },\n  centerText: {\n    textAlign: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  },\n  cell: {\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center'\n  },\n  sorted: {\n    marginLeft: 8\n  },\n  icon: {\n    height: 24,\n    justifyContent: 'center'\n  }\n});\nexport default DataTableTitle;\nexport { DataTableTitle };","map":{"version":3,"names":["React","Animated","I18nManager","StyleSheet","TouchableWithoutFeedback","View","color","useInternalTheme","MaterialCommunityIcon","Text","DataTableTitle","_ref","_theme$colors","numeric","children","onPress","sortDirection","textStyle","style","themeOverrides","theme","_ref$numberOfLines","numberOfLines","maxFontSizeMultiplier","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","Value","spinAnim","current","useEffect","timing","toValue","duration","useNativeDriver","start","textColor","isV3","colors","onSurface","text","alphaTextColor","alpha","rgb","string","spin","interpolate","inputRange","outputRange","icon","createElement","styles","transform","rotate","name","size","direction","getConstants","isRTL","_extends","disabled","container","right","cell","maxHeight","leftText","rightText","centerText","sorted","displayName","create","flex","flexDirection","alignContent","paddingVertical","textAlign","justifyContent","lineHeight","fontSize","fontWeight","alignItems","marginLeft","height"],"sources":["E:\\Mobile-Application-Development\\NewsApp\\node_modules\\react-native-paper\\src\\components\\DataTable\\DataTableTitle.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Animated,\r\n  GestureResponderEvent,\r\n  I18nManager,\r\n  StyleProp,\r\n  StyleSheet,\r\n  TextStyle,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n  ViewStyle,\r\n} from 'react-native';\r\n\r\nimport color from 'color';\r\n\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport type { ThemeProp } from '../../types';\r\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\r\nimport Text from '../Typography/Text';\r\n\r\nexport type Props = React.ComponentPropsWithRef<\r\n  typeof TouchableWithoutFeedback\r\n> & {\r\n  /**\r\n   * Text content of the `DataTableTitle`.\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\r\n   */\r\n  numeric?: boolean;\r\n  /**\r\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\r\n   */\r\n  sortDirection?: 'ascending' | 'descending';\r\n  /**\r\n   * The number of lines to show.\r\n   */\r\n  numberOfLines?: number;\r\n  /**\r\n   * Function to execute on press.\r\n   */\r\n  onPress?: (e: GestureResponderEvent) => void;\r\n  style?: StyleProp<ViewStyle>;\r\n  /**\r\n   * Text content style of the `DataTableTitle`.\r\n   */\r\n  textStyle?: StyleProp<TextStyle>;\r\n  /**\r\n   * Specifies the largest possible scale a text font can reach.\r\n   */\r\n  maxFontSizeMultiplier?: number;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n};\r\n\r\n/**\r\n * A component to display title in table header.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { DataTable } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *       <DataTable>\r\n *         <DataTable.Header>\r\n *           <DataTable.Title\r\n *             sortDirection='descending'\r\n *           >\r\n *             Dessert\r\n *           </DataTable.Title>\r\n *           <DataTable.Title numeric>Calories</DataTable.Title>\r\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\r\n *         </DataTable.Header>\r\n *       </DataTable>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\n\r\nconst DataTableTitle = ({\r\n  numeric,\r\n  children,\r\n  onPress,\r\n  sortDirection,\r\n  textStyle,\r\n  style,\r\n  theme: themeOverrides,\r\n  numberOfLines = 1,\r\n  maxFontSizeMultiplier,\r\n  ...rest\r\n}: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n  const { current: spinAnim } = React.useRef<Animated.Value>(\r\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    Animated.timing(spinAnim, {\r\n      toValue: sortDirection === 'ascending' ? 0 : 1,\r\n      duration: 150,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  }, [sortDirection, spinAnim]);\r\n\r\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme?.colors?.text;\r\n\r\n  const alphaTextColor = color(textColor).alpha(0.6).rgb().string();\r\n\r\n  const spin = spinAnim.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: ['0deg', '180deg'],\r\n  });\r\n\r\n  const icon = sortDirection ? (\r\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\r\n      <MaterialCommunityIcon\r\n        name=\"arrow-up\"\r\n        size={16}\r\n        color={textColor}\r\n        direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\r\n      />\r\n    </Animated.View>\r\n  ) : null;\r\n\r\n  return (\r\n    <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\r\n      <View style={[styles.container, numeric && styles.right, style]}>\r\n        {icon}\r\n\r\n        <Text\r\n          style={[\r\n            styles.cell,\r\n            // height must scale with numberOfLines\r\n            { maxHeight: 24 * numberOfLines },\r\n            // if numberOfLines causes wrap, center is lost. Align directly, sensitive to numeric and RTL\r\n            numberOfLines > 1\r\n              ? numeric\r\n                ? I18nManager.getConstants().isRTL\r\n                  ? styles.leftText\r\n                  : styles.rightText\r\n                : styles.centerText\r\n              : {},\r\n            sortDirection ? styles.sorted : { color: alphaTextColor },\r\n            textStyle,\r\n          ]}\r\n          numberOfLines={numberOfLines}\r\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\r\n        >\r\n          {children}\r\n        </Text>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nDataTableTitle.displayName = 'DataTable.Title';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignContent: 'center',\r\n    paddingVertical: 12,\r\n  },\r\n\r\n  rightText: {\r\n    textAlign: 'right',\r\n  },\r\n\r\n  leftText: {\r\n    textAlign: 'left',\r\n  },\r\n\r\n  centerText: {\r\n    textAlign: 'center',\r\n  },\r\n\r\n  right: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n\r\n  cell: {\r\n    lineHeight: 24,\r\n    fontSize: 12,\r\n    fontWeight: '500',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  sorted: {\r\n    marginLeft: 8,\r\n  },\r\n\r\n  icon: {\r\n    height: 24,\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default DataTableTitle;\r\n\r\n// @component-docs ignore-next-line\r\nexport { DataTableTitle };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}