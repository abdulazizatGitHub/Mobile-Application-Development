{"ast":null,"code":"import * as React from 'react';\nimport { Ionicons, Fontisto } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport HomeScreen from \"../screens/Home\";\nimport FavoritesScreen from \"../screens/Favorites\";\nimport AddCategoryScreen from \"../screens/AddCategories\";\nimport SearchScreen from \"../screens/Search\";\nimport MyListScreen from \"../screens/MyList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction BottomTab() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color;\n            var iconName;\n            if (route.name === 'Home') {\n              iconName = focused ? 'home' : 'home-outline';\n            } else if (route.name === 'My List') {\n              iconName = focused ? 'list-outline' : 'list';\n            } else if (route.name === 'Read Later') {\n              iconName = focused ? 'bookmarks-outline' : 'bookmark-outline';\n            } else if (route.name === 'Add Content') {\n              iconName = focused ? 'add-outline' : 'add';\n            } else if (route.name === 'Search') {\n              iconName = focused ? 'search-outline' : 'search';\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: 30,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray'\n        };\n      },\n      initialRouteName: \"Home\",\n      children: [_jsx(Tab.Screen, {\n        name: \"My List\",\n        component: MyListScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Read Later\",\n        component: FavoritesScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Add Content\",\n        component: AddCategoryScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Search\",\n        component: SearchScreen\n      })]\n    })\n  });\n}\nexport default BottomTab;","map":{"version":3,"names":["React","Ionicons","Fontisto","createBottomTabNavigator","NavigationContainer","HomeScreen","FavoritesScreen","AddCategoryScreen","SearchScreen","MyListScreen","jsx","_jsx","jsxs","_jsxs","Tab","BottomTab","children","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","iconName","name","size","tabBarActiveTintColor","tabBarInactiveTintColor","initialRouteName","Screen","component"],"sources":["D:/5th Semester/Mobile Application Development/SemesterProject/NewsApp/src/navigations/bottomTab.js"],"sourcesContent":["// You can import Ionicons from @expo/vector-icons if you use Expo or\r\n// react-native-vector-icons/Ionicons otherwise.\r\nimport * as React from 'react';\r\nimport { Ionicons, Fontisto  } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport HomeScreen from '../screens/Home';\r\nimport FavoritesScreen from '../screens/Favorites';\r\nimport AddCategoryScreen from '../screens/AddCategories';\r\nimport SearchScreen from '../screens/Search';\r\nimport MyListScreen from '../screens/MyList';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction BottomTab() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color }) => {\r\n            let iconName;\r\n\r\n            if (route.name === 'Home') {\r\n              iconName = focused\r\n                ? 'home'\r\n                : 'home-outline';\r\n            } else if (route.name === 'My List') {\r\n              iconName = focused ? 'list-outline' : 'list';\r\n            } else if (route.name === 'Read Later') {\r\n                iconName = focused ? 'bookmarks-outline' : 'bookmark-outline'\r\n            } else if (route.name === 'Add Content') {\r\n                iconName = focused ? 'add-outline' : 'add'\r\n            } else if (route.name === 'Search') {\r\n                iconName = focused ? 'search-outline' : 'search'\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={30} color={color} />;\r\n          },\r\n          tabBarActiveTintColor: 'tomato',\r\n          tabBarInactiveTintColor: 'gray',\r\n        })}\r\n        initialRouteName='Home'\r\n      >\r\n        <Tab.Screen name=\"My List\" component={MyListScreen} />\r\n        <Tab.Screen name=\"Read Later\" component={FavoritesScreen} />\r\n        <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n        <Tab.Screen name=\"Add Content\" component={AddCategoryScreen} />\r\n        <Tab.Screen name=\"Search\" component={SearchScreen} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\nexport default BottomTab;"],"mappings":"AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,QAAQ,QAAS,oBAAoB;AACxD,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,UAAU;AACjB,OAAOC,eAAe;AACtB,OAAOC,iBAAiB;AACxB,OAAOC,YAAY;AACnB,OAAOC,YAAY;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,GAAG,GAAGX,wBAAwB,CAAC,CAAC;AAEtC,SAASY,SAASA,CAAA,EAAG;EACnB,OACEJ,IAAA,CAACP,mBAAmB;IAAAY,QAAA,EAClBH,KAAA,CAACC,GAAG,CAACG,SAAS;MACZC,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAAwB;YAAA,IAArBC,OAAO,GAAAD,KAAA,CAAPC,OAAO;cAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;YAC3B,IAAIC,QAAQ;YAEZ,IAAIL,KAAK,CAACM,IAAI,KAAK,MAAM,EAAE;cACzBD,QAAQ,GAAGF,OAAO,GACd,MAAM,GACN,cAAc;YACpB,CAAC,MAAM,IAAIH,KAAK,CAACM,IAAI,KAAK,SAAS,EAAE;cACnCD,QAAQ,GAAGF,OAAO,GAAG,cAAc,GAAG,MAAM;YAC9C,CAAC,MAAM,IAAIH,KAAK,CAACM,IAAI,KAAK,YAAY,EAAE;cACpCD,QAAQ,GAAGF,OAAO,GAAG,mBAAmB,GAAG,kBAAkB;YACjE,CAAC,MAAM,IAAIH,KAAK,CAACM,IAAI,KAAK,aAAa,EAAE;cACrCD,QAAQ,GAAGF,OAAO,GAAG,aAAa,GAAG,KAAK;YAC9C,CAAC,MAAM,IAAIH,KAAK,CAACM,IAAI,KAAK,QAAQ,EAAE;cAChCD,QAAQ,GAAGF,OAAO,GAAG,gBAAgB,GAAG,QAAQ;YACpD;YAGA,OAAOZ,IAAA,CAACV,QAAQ;cAACyB,IAAI,EAAED,QAAS;cAACE,IAAI,EAAE,EAAG;cAACH,KAAK,EAAEA;YAAM,CAAE,CAAC;UAC7D,CAAC;UACDI,qBAAqB,EAAE,QAAQ;UAC/BC,uBAAuB,EAAE;QAC3B,CAAC;MAAA,CAAE;MACHC,gBAAgB,EAAC,MAAM;MAAAd,QAAA,GAEvBL,IAAA,CAACG,GAAG,CAACiB,MAAM;QAACL,IAAI,EAAC,SAAS;QAACM,SAAS,EAAEvB;MAAa,CAAE,CAAC,EACtDE,IAAA,CAACG,GAAG,CAACiB,MAAM;QAACL,IAAI,EAAC,YAAY;QAACM,SAAS,EAAE1B;MAAgB,CAAE,CAAC,EAC5DK,IAAA,CAACG,GAAG,CAACiB,MAAM;QAACL,IAAI,EAAC,MAAM;QAACM,SAAS,EAAE3B;MAAW,CAAE,CAAC,EACjDM,IAAA,CAACG,GAAG,CAACiB,MAAM;QAACL,IAAI,EAAC,aAAa;QAACM,SAAS,EAAEzB;MAAkB,CAAE,CAAC,EAC/DI,IAAA,CAACG,GAAG,CAACiB,MAAM;QAACL,IAAI,EAAC,QAAQ;QAACM,SAAS,EAAExB;MAAa,CAAE,CAAC;IAAA,CACxC;EAAC,CACG,CAAC;AAE1B;AACA,eAAeO,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}