{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"title\", \"titleStyle\", \"style\", \"theme\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ListSubheader from \"./ListSubheader\";\nimport { useInternalTheme } from \"../../core/theming\";\nvar ListSection = function ListSection(_ref) {\n  var children = _ref.children,\n    title = _ref.title,\n    titleStyle = _ref.titleStyle,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var viewProps = _objectSpread(_objectSpread({}, rest), {}, {\n    theme: theme\n  });\n  return React.createElement(View, _extends({}, viewProps, {\n    style: [styles.container, style]\n  }), title ? React.createElement(ListSubheader, {\n    style: titleStyle,\n    theme: theme\n  }, title) : null, children);\n};\nListSection.displayName = 'List.Section';\nvar styles = StyleSheet.create({\n  container: {\n    marginVertical: 8\n  }\n});\nexport default ListSection;","map":{"version":3,"names":["React","StyleSheet","View","ListSubheader","useInternalTheme","ListSection","_ref","children","title","titleStyle","style","themeOverrides","theme","rest","_objectWithoutProperties","_excluded","viewProps","_objectSpread","createElement","_extends","styles","container","displayName","create","marginVertical"],"sources":["E:\\Mobile-Application-Development\\NewsApp\\node_modules\\react-native-paper\\src\\components\\List\\ListSection.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  StyleProp,\r\n  StyleSheet,\r\n  TextStyle,\r\n  View,\r\n  ViewStyle,\r\n} from 'react-native';\r\n\r\nimport ListSubheader from './ListSubheader';\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport type { ThemeProp } from '../../types';\r\n\r\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\r\n  /**\r\n   * Title text for the section.\r\n   */\r\n  title?: string;\r\n  /**\r\n   * Content of the section.\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n  /**\r\n   * Style that is passed to Title element.\r\n   */\r\n  titleStyle?: StyleProp<TextStyle>;\r\n  style?: StyleProp<ViewStyle>;\r\n};\r\n\r\n/**\r\n * A component used to group list items.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { List, MD3Colors } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *   <List.Section>\r\n *     <List.Subheader>Some title</List.Subheader>\r\n *     <List.Item title=\"First Item\" left={() => <List.Icon icon=\"folder\" />} />\r\n *     <List.Item\r\n *       title=\"Second Item\"\r\n *       left={() => <List.Icon color={MD3Colors.tertiary70} icon=\"folder\" />}\r\n *     />\r\n *   </List.Section>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst ListSection = ({\r\n  children,\r\n  title,\r\n  titleStyle,\r\n  style,\r\n  theme: themeOverrides,\r\n  ...rest\r\n}: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n  const viewProps = { ...rest, theme };\r\n\r\n  return (\r\n    <View {...viewProps} style={[styles.container, style]}>\r\n      {title ? (\r\n        <ListSubheader style={titleStyle} theme={theme}>\r\n          {title}\r\n        </ListSubheader>\r\n      ) : null}\r\n      {children}\r\n    </View>\r\n  );\r\n};\r\n\r\nListSection.displayName = 'List.Section';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginVertical: 8,\r\n  },\r\n});\r\n\r\nexport default ListSection;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAS9B,OAAOC,aAAa;AACpB,SAASC,gBAAgB;AA6CzB,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAGC,IAAA,EAOP;EAAA,IANXC,QAAQ,GAMFD,IAAA,CANNC,QAAQ;IACRC,KAAK,GAKCF,IAAA,CALNE,KAAK;IACLC,UAAU,GAIJH,IAAA,CAJNG,UAAU;IACVC,KAAK,GAGCJ,IAAA,CAHNI,KAAK;IACEC,cAAc,GAEfL,IAAA,CAFNM,KAAK;IACFC,IAAA,GAAAC,wBAAA,CACGR,IAAA,EAAAS,SAAA;EACN,IAAMH,KAAK,GAAGR,gBAAgB,CAACO,cAAc,CAAC;EAC9C,IAAMK,SAAS,GAAAC,aAAA,CAAAA,aAAA,KAAQJ,IAAI;IAAED,KAAA,EAAAA;EAAA,EAAO;EAEpC,OACEZ,KAAA,CAAAkB,aAAA,CAAChB,IAAI,EAAAiB,QAAA,KAAKH,SAAS;IAAEN,KAAK,EAAE,CAACU,MAAM,CAACC,SAAS,EAAEX,KAAK;EAAE,IACnDF,KAAK,GACJR,KAAA,CAAAkB,aAAA,CAACf,aAAa;IAACO,KAAK,EAAED,UAAW;IAACG,KAAK,EAAEA;EAAM,GAC5CJ,KACY,CAAC,GACd,IAAI,EACPD,QACG,CAAC;AAEX,CAAC;AAEDF,WAAW,CAACiB,WAAW,GAAG,cAAc;AAExC,IAAMF,MAAM,GAAGnB,UAAU,CAACsB,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAenB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}