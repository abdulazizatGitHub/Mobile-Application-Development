{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"action\", \"icon\", \"onIconPress\", \"iconAccessibilityLabel\", \"duration\", \"onDismiss\", \"children\", \"elevation\", \"wrapperStyle\", \"style\", \"theme\", \"maxFontSizeMultiplier\", \"rippleColor\", \"testID\"],\n  _excluded2 = [\"style\", \"label\", \"onPress\", \"rippleColor\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport useLatestCallback from 'use-latest-callback';\nimport Button from \"./Button/Button\";\nimport IconButton from \"./IconButton/IconButton\";\nimport MaterialCommunityIcon from \"./MaterialCommunityIcon\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nimport { useInternalTheme } from \"../core/theming\";\nvar DURATION_SHORT = 4000;\nvar DURATION_MEDIUM = 7000;\nvar DURATION_LONG = 10000;\nvar Snackbar = function Snackbar(_ref) {\n  var visible = _ref.visible,\n    action = _ref.action,\n    icon = _ref.icon,\n    onIconPress = _ref.onIconPress,\n    _ref$iconAccessibilit = _ref.iconAccessibilityLabel,\n    iconAccessibilityLabel = _ref$iconAccessibilit === void 0 ? 'Close icon' : _ref$iconAccessibilit,\n    _ref$duration = _ref.duration,\n    duration = _ref$duration === void 0 ? DURATION_MEDIUM : _ref$duration,\n    onDismiss = _ref.onDismiss,\n    children = _ref.children,\n    _ref$elevation = _ref.elevation,\n    elevation = _ref$elevation === void 0 ? 2 : _ref$elevation,\n    wrapperStyle = _ref.wrapperStyle,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    maxFontSizeMultiplier = _ref.maxFontSizeMultiplier,\n    rippleColor = _ref.rippleColor,\n    testID = _ref.testID,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var _useSafeAreaInsets = useSafeAreaInsets(),\n    bottom = _useSafeAreaInsets.bottom,\n    right = _useSafeAreaInsets.right,\n    left = _useSafeAreaInsets.left;\n  var _React$useRef = React.useRef(new Animated.Value(0.0)),\n    opacity = _React$useRef.current;\n  var hideTimeout = React.useRef(undefined);\n  var _React$useState = React.useState(!visible),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hidden = _React$useState2[0],\n    setHidden = _React$useState2[1];\n  var scale = theme.animation.scale;\n  var handleOnVisible = useLatestCallback(function () {\n    if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    setHidden(false);\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: 200 * scale,\n      easing: Easing.out(Easing.ease),\n      useNativeDriver: true\n    }).start(function (_ref2) {\n      var finished = _ref2.finished;\n      if (finished) {\n        var isInfinity = duration === Number.POSITIVE_INFINITY || duration === Number.NEGATIVE_INFINITY;\n        if (!isInfinity) {\n          hideTimeout.current = setTimeout(onDismiss, duration);\n        }\n      }\n    });\n  });\n  var handleOnHidden = useLatestCallback(function () {\n    if (hideTimeout.current) {\n      clearTimeout(hideTimeout.current);\n    }\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 100 * scale,\n      useNativeDriver: true\n    }).start(function (_ref3) {\n      var finished = _ref3.finished;\n      if (finished) {\n        setHidden(true);\n      }\n    });\n  });\n  React.useEffect(function () {\n    return function () {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n  React.useLayoutEffect(function () {\n    if (visible) {\n      handleOnVisible();\n    } else {\n      handleOnHidden();\n    }\n  }, [visible, handleOnVisible, handleOnHidden]);\n  var colors = theme.colors,\n    roundness = theme.roundness,\n    isV3 = theme.isV3;\n  if (hidden) {\n    return null;\n  }\n  var _ref5 = action || {},\n    actionStyle = _ref5.style,\n    actionLabel = _ref5.label,\n    onPressAction = _ref5.onPress,\n    actionRippleColor = _ref5.rippleColor,\n    actionProps = _objectWithoutProperties(_ref5, _excluded2);\n  var buttonTextColor = isV3 ? colors.inversePrimary : colors.accent;\n  var textColor = isV3 ? colors.inverseOnSurface : colors === null || colors === void 0 ? void 0 : colors.surface;\n  var backgroundColor = isV3 ? colors.inverseSurface : colors === null || colors === void 0 ? void 0 : colors.onSurface;\n  var isIconButton = isV3 && onIconPress;\n  var marginLeft = action ? -12 : -16;\n  var wrapperPaddings = {\n    paddingBottom: bottom,\n    paddingHorizontal: Math.max(left, right)\n  };\n  var renderChildrenWithWrapper = function renderChildrenWithWrapper() {\n    if (typeof children === 'string') {\n      return React.createElement(Text, {\n        variant: \"bodyMedium\",\n        style: [styles.content, {\n          color: textColor\n        }],\n        maxFontSizeMultiplier: maxFontSizeMultiplier\n      }, children);\n    }\n    return React.createElement(View, {\n      style: styles.content\n    }, React.createElement(View, null, children));\n  };\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.wrapper, wrapperPaddings, wrapperStyle]\n  }, React.createElement(Surface, _extends({\n    pointerEvents: \"box-none\",\n    accessibilityLiveRegion: \"polite\",\n    theme: theme,\n    style: [!isV3 && styles.elevation, styles.container, {\n      backgroundColor: backgroundColor,\n      borderRadius: roundness,\n      opacity: opacity,\n      transform: [{\n        scale: visible ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.9, 1]\n        }) : 1\n      }]\n    }, style],\n    testID: testID\n  }, isV3 && {\n    elevation: elevation\n  }, rest), renderChildrenWithWrapper(), (action || isIconButton) && React.createElement(View, {\n    style: [styles.actionsContainer, {\n      marginLeft: marginLeft\n    }]\n  }, action ? React.createElement(Button, _extends({\n    onPress: function onPress(event) {\n      onPressAction === null || onPressAction === void 0 ? void 0 : onPressAction(event);\n      onDismiss();\n    },\n    style: [styles.button, actionStyle],\n    textColor: buttonTextColor,\n    compact: !isV3,\n    mode: \"text\",\n    theme: theme,\n    rippleColor: actionRippleColor\n  }, actionProps), actionLabel) : null, isIconButton ? React.createElement(IconButton, {\n    accessibilityRole: \"button\",\n    borderless: true,\n    onPress: onIconPress,\n    iconColor: theme.colors.inverseOnSurface,\n    rippleColor: rippleColor,\n    theme: theme,\n    icon: icon || function (_ref4) {\n      var size = _ref4.size,\n        color = _ref4.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"close\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    accessibilityLabel: iconAccessibilityLabel,\n    style: styles.icon,\n    testID: `${testID}-icon`\n  }) : null)));\n};\nSnackbar.DURATION_SHORT = DURATION_SHORT;\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\nSnackbar.DURATION_LONG = DURATION_LONG;\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: 8,\n    borderRadius: 4,\n    minHeight: 48\n  },\n  content: {\n    marginHorizontal: 16,\n    marginVertical: 14,\n    flex: 1\n  },\n  actionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    minHeight: 48\n  },\n  button: {\n    marginRight: 8,\n    marginLeft: 4\n  },\n  elevation: {\n    elevation: 6\n  },\n  icon: {\n    width: 40,\n    height: 40,\n    margin: 0\n  }\n});\nexport default Snackbar;","map":{"version":3,"names":["React","Animated","Easing","I18nManager","StyleSheet","View","useSafeAreaInsets","useLatestCallback","Button","IconButton","MaterialCommunityIcon","Surface","Text","useInternalTheme","DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","_ref","visible","action","icon","onIconPress","_ref$iconAccessibilit","iconAccessibilityLabel","_ref$duration","duration","onDismiss","children","_ref$elevation","elevation","wrapperStyle","style","themeOverrides","theme","maxFontSizeMultiplier","rippleColor","testID","rest","_objectWithoutProperties","_excluded","_useSafeAreaInsets","bottom","right","left","_React$useRef","useRef","Value","opacity","current","hideTimeout","undefined","_React$useState","useState","_React$useState2","_slicedToArray","hidden","setHidden","scale","animation","handleOnVisible","clearTimeout","timing","toValue","easing","out","ease","useNativeDriver","start","_ref2","finished","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","setTimeout","handleOnHidden","_ref3","useEffect","useLayoutEffect","colors","roundness","isV3","_ref5","actionStyle","actionLabel","label","onPressAction","onPress","actionRippleColor","actionProps","_excluded2","buttonTextColor","inversePrimary","accent","textColor","inverseOnSurface","surface","backgroundColor","inverseSurface","onSurface","isIconButton","marginLeft","wrapperPaddings","paddingBottom","paddingHorizontal","Math","max","renderChildrenWithWrapper","createElement","variant","styles","content","color","pointerEvents","wrapper","_extends","accessibilityLiveRegion","container","borderRadius","transform","interpolate","inputRange","outputRange","actionsContainer","event","button","compact","mode","accessibilityRole","borderless","iconColor","_ref4","size","name","direction","getConstants","isRTL","accessibilityLabel","create","position","width","flexDirection","justifyContent","margin","minHeight","marginHorizontal","marginVertical","flex","alignItems","marginRight","height"],"sources":["C:\\Users\\w5677\\Mobile-Application-Development\\NewsApp\\node_modules\\react-native-paper\\src\\components\\Snackbar.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Animated,\r\n  ColorValue,\r\n  Easing,\r\n  I18nManager,\r\n  StyleProp,\r\n  StyleSheet,\r\n  View,\r\n  ViewStyle,\r\n} from 'react-native';\r\n\r\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\r\nimport useLatestCallback from 'use-latest-callback';\r\n\r\nimport Button from './Button/Button';\r\nimport type { IconSource } from './Icon';\r\nimport IconButton from './IconButton/IconButton';\r\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\r\nimport Surface from './Surface';\r\nimport Text from './Typography/Text';\r\nimport { useInternalTheme } from '../core/theming';\r\nimport type { $Omit, $RemoveChildren, ThemeProp } from '../types';\r\n\r\nexport type Props = $Omit<React.ComponentProps<typeof Surface>, 'mode'> & {\r\n  /**\r\n   * Whether the Snackbar is currently visible.\r\n   */\r\n  visible: boolean;\r\n  /**\r\n   * Label and press callback for the action button. It should contain the following properties:\r\n   * - `label` - Label of the action button\r\n   * - `onPress` - Callback that is called when action button is pressed.\r\n   */\r\n  action?: $RemoveChildren<typeof Button> & {\r\n    label: string;\r\n  };\r\n  /**\r\n   * @supported Available in v5.x with theme version 3\r\n   * Icon to display when `onIconPress` is defined. Default will be `close` icon.\r\n   */\r\n  icon?: IconSource;\r\n  /**\r\n   * @supported Available in v5.x with theme version 3\r\n   * Color of the ripple effect.\r\n   */\r\n  rippleColor?: ColorValue;\r\n  /**\r\n   * @supported Available in v5.x with theme version 3\r\n   * Function to execute on icon button press. The icon button appears only when this prop is specified.\r\n   */\r\n  onIconPress?: () => void;\r\n  /**\r\n   * @supported Available in v5.x with theme version 3\r\n   * Accessibility label for the icon button. This is read by the screen reader when the user taps the button.\r\n   */\r\n  iconAccessibilityLabel?: string;\r\n  /**\r\n   * The duration for which the Snackbar is shown.\r\n   */\r\n  duration?: number;\r\n  /**\r\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\r\n   */\r\n  onDismiss: () => void;\r\n  /**\r\n   * Text content of the Snackbar.\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * @supported Available in v5.x with theme version 3\r\n   * Changes Snackbar shadow and background on iOS and Android.\r\n   */\r\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\r\n  /**\r\n   * Specifies the largest possible scale a text font can reach.\r\n   */\r\n  maxFontSizeMultiplier?: number;\r\n  /**\r\n   * Style for the wrapper of the snackbar\r\n   */\r\n  wrapperStyle?: StyleProp<ViewStyle>;\r\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n  ref?: React.RefObject<View>;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n  /**\r\n   * TestID used for testing purposes\r\n   */\r\n  testID?: string;\r\n};\r\n\r\nconst DURATION_SHORT = 4000;\r\nconst DURATION_MEDIUM = 7000;\r\nconst DURATION_LONG = 10000;\r\n\r\n/**\r\n * Snackbars provide brief feedback about an operation through a message rendered at the bottom of the container in which it's wrapped.\r\n *\r\n * Note: To display it as a popup, regardless of the parent's position, wrap it with a `Portal` component – refer to the example in the \"More Examples` section.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View, StyleSheet } from 'react-native';\r\n * import { Button, Snackbar } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => {\r\n *   const [visible, setVisible] = React.useState(false);\r\n *\r\n *   const onToggleSnackBar = () => setVisible(!visible);\r\n *\r\n *   const onDismissSnackBar = () => setVisible(false);\r\n *\r\n *   return (\r\n *     <View style={styles.container}>\r\n *       <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\r\n *       <Snackbar\r\n *         visible={visible}\r\n *         onDismiss={onDismissSnackBar}\r\n *         action={{\r\n *           label: 'Undo',\r\n *           onPress: () => {\r\n *             // Do something\r\n *           },\r\n *         }}>\r\n *         Hey there! I'm a Snackbar.\r\n *       </Snackbar>\r\n *     </View>\r\n *   );\r\n * };\r\n *\r\n * const styles = StyleSheet.create({\r\n *   container: {\r\n *     flex: 1,\r\n *     justifyContent: 'space-between',\r\n *   },\r\n * });\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst Snackbar = ({\r\n  visible,\r\n  action,\r\n  icon,\r\n  onIconPress,\r\n  iconAccessibilityLabel = 'Close icon',\r\n  duration = DURATION_MEDIUM,\r\n  onDismiss,\r\n  children,\r\n  elevation = 2,\r\n  wrapperStyle,\r\n  style,\r\n  theme: themeOverrides,\r\n  maxFontSizeMultiplier,\r\n  rippleColor,\r\n  testID,\r\n  ...rest\r\n}: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n  const { bottom, right, left } = useSafeAreaInsets();\r\n\r\n  const { current: opacity } = React.useRef<Animated.Value>(\r\n    new Animated.Value(0.0)\r\n  );\r\n  const hideTimeout = React.useRef<NodeJS.Timeout | undefined>(undefined);\r\n\r\n  const [hidden, setHidden] = React.useState(!visible);\r\n\r\n  const { scale } = theme.animation;\r\n\r\n  const handleOnVisible = useLatestCallback(() => {\r\n    // show\r\n    if (hideTimeout.current) clearTimeout(hideTimeout.current);\r\n    setHidden(false);\r\n    Animated.timing(opacity, {\r\n      toValue: 1,\r\n      duration: 200 * scale,\r\n      easing: Easing.out(Easing.ease),\r\n      useNativeDriver: true,\r\n    }).start(({ finished }) => {\r\n      if (finished) {\r\n        const isInfinity =\r\n          duration === Number.POSITIVE_INFINITY ||\r\n          duration === Number.NEGATIVE_INFINITY;\r\n\r\n        if (!isInfinity) {\r\n          hideTimeout.current = setTimeout(\r\n            onDismiss,\r\n            duration\r\n          ) as unknown as NodeJS.Timeout;\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  const handleOnHidden = useLatestCallback(() => {\r\n    // hide\r\n    if (hideTimeout.current) {\r\n      clearTimeout(hideTimeout.current);\r\n    }\r\n\r\n    Animated.timing(opacity, {\r\n      toValue: 0,\r\n      duration: 100 * scale,\r\n      useNativeDriver: true,\r\n    }).start(({ finished }) => {\r\n      if (finished) {\r\n        setHidden(true);\r\n      }\r\n    });\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\r\n    };\r\n  }, []);\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (visible) {\r\n      handleOnVisible();\r\n    } else {\r\n      handleOnHidden();\r\n    }\r\n  }, [visible, handleOnVisible, handleOnHidden]);\r\n\r\n  const { colors, roundness, isV3 } = theme;\r\n\r\n  if (hidden) {\r\n    return null;\r\n  }\r\n\r\n  const {\r\n    style: actionStyle,\r\n    label: actionLabel,\r\n    onPress: onPressAction,\r\n    rippleColor: actionRippleColor,\r\n    ...actionProps\r\n  } = action || {};\r\n\r\n  const buttonTextColor = isV3 ? colors.inversePrimary : colors.accent;\r\n  const textColor = isV3 ? colors.inverseOnSurface : colors?.surface;\r\n  const backgroundColor = isV3 ? colors.inverseSurface : colors?.onSurface;\r\n\r\n  const isIconButton = isV3 && onIconPress;\r\n\r\n  const marginLeft = action ? -12 : -16;\r\n\r\n  const wrapperPaddings = {\r\n    paddingBottom: bottom,\r\n    paddingHorizontal: Math.max(left, right),\r\n  };\r\n\r\n  const renderChildrenWithWrapper = () => {\r\n    if (typeof children === 'string') {\r\n      return (\r\n        <Text\r\n          variant=\"bodyMedium\"\r\n          style={[styles.content, { color: textColor }]}\r\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\r\n        >\r\n          {children}\r\n        </Text>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View style={styles.content}>\r\n        {/* View is added to allow multiple lines support for Text component as children */}\r\n        <View>{children}</View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View\r\n      pointerEvents=\"box-none\"\r\n      style={[styles.wrapper, wrapperPaddings, wrapperStyle]}\r\n    >\r\n      <Surface\r\n        pointerEvents=\"box-none\"\r\n        accessibilityLiveRegion=\"polite\"\r\n        theme={theme}\r\n        style={[\r\n          !isV3 && styles.elevation,\r\n          styles.container,\r\n          {\r\n            backgroundColor,\r\n            borderRadius: roundness,\r\n            opacity: opacity,\r\n            transform: [\r\n              {\r\n                scale: visible\r\n                  ? opacity.interpolate({\r\n                      inputRange: [0, 1],\r\n                      outputRange: [0.9, 1],\r\n                    })\r\n                  : 1,\r\n              },\r\n            ],\r\n          },\r\n          style,\r\n        ]}\r\n        testID={testID}\r\n        {...(isV3 && { elevation })}\r\n        {...rest}\r\n      >\r\n        {renderChildrenWithWrapper()}\r\n        {(action || isIconButton) && (\r\n          <View style={[styles.actionsContainer, { marginLeft }]}>\r\n            {action ? (\r\n              <Button\r\n                onPress={(event) => {\r\n                  onPressAction?.(event);\r\n                  onDismiss();\r\n                }}\r\n                style={[styles.button, actionStyle]}\r\n                textColor={buttonTextColor}\r\n                compact={!isV3}\r\n                mode=\"text\"\r\n                theme={theme}\r\n                rippleColor={actionRippleColor}\r\n                {...actionProps}\r\n              >\r\n                {actionLabel}\r\n              </Button>\r\n            ) : null}\r\n            {isIconButton ? (\r\n              <IconButton\r\n                accessibilityRole=\"button\"\r\n                borderless\r\n                onPress={onIconPress}\r\n                iconColor={theme.colors.inverseOnSurface}\r\n                rippleColor={rippleColor}\r\n                theme={theme}\r\n                icon={\r\n                  icon ||\r\n                  (({ size, color }) => {\r\n                    return (\r\n                      <MaterialCommunityIcon\r\n                        name=\"close\"\r\n                        color={color}\r\n                        size={size}\r\n                        direction={\r\n                          I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\r\n                        }\r\n                      />\r\n                    );\r\n                  })\r\n                }\r\n                accessibilityLabel={iconAccessibilityLabel}\r\n                style={styles.icon}\r\n                testID={`${testID}-icon`}\r\n              />\r\n            ) : null}\r\n          </View>\r\n        )}\r\n      </Surface>\r\n    </View>\r\n  );\r\n};\r\n\r\n/**\r\n * Show the Snackbar for a short duration.\r\n */\r\nSnackbar.DURATION_SHORT = DURATION_SHORT;\r\n\r\n/**\r\n * Show the Snackbar for a medium duration.\r\n */\r\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\r\n\r\n/**\r\n * Show the Snackbar for a long duration.\r\n */\r\nSnackbar.DURATION_LONG = DURATION_LONG;\r\n\r\nconst styles = StyleSheet.create({\r\n  wrapper: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    margin: 8,\r\n    borderRadius: 4,\r\n    minHeight: 48,\r\n  },\r\n  content: {\r\n    marginHorizontal: 16,\r\n    marginVertical: 14,\r\n    flex: 1,\r\n  },\r\n  actionsContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    minHeight: 48,\r\n  },\r\n  button: {\r\n    marginRight: 8,\r\n    marginLeft: 4,\r\n  },\r\n  elevation: {\r\n    elevation: 6,\r\n  },\r\n  icon: {\r\n    width: 40,\r\n    height: 40,\r\n    margin: 0,\r\n  },\r\n});\r\n\r\nexport default Snackbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}