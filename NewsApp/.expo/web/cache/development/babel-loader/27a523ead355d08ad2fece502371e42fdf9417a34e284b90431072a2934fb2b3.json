{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"icon\", \"children\", \"actions\", \"contentStyle\", \"elevation\", \"style\", \"theme\", \"onShowAnimationFinished\", \"onHideAnimationFinished\", \"maxFontSizeMultiplier\"],\n  _excluded2 = [\"label\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useLatestCallback from 'use-latest-callback';\nimport Button from \"./Button/Button\";\nimport Icon from \"./Icon\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nimport { useInternalTheme } from \"../core/theming\";\nvar DEFAULT_MAX_WIDTH = 960;\nvar Banner = function Banner(_ref) {\n  var visible = _ref.visible,\n    icon = _ref.icon,\n    children = _ref.children,\n    _ref$actions = _ref.actions,\n    actions = _ref$actions === void 0 ? [] : _ref$actions,\n    contentStyle = _ref.contentStyle,\n    _ref$elevation = _ref.elevation,\n    elevation = _ref$elevation === void 0 ? 1 : _ref$elevation,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    _ref$onShowAnimationF = _ref.onShowAnimationFinished,\n    onShowAnimationFinished = _ref$onShowAnimationF === void 0 ? function () {} : _ref$onShowAnimationF,\n    _ref$onHideAnimationF = _ref.onHideAnimationFinished,\n    onHideAnimationFinished = _ref$onHideAnimationF === void 0 ? function () {} : _ref$onHideAnimationF,\n    maxFontSizeMultiplier = _ref.maxFontSizeMultiplier,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    position = _React$useRef.current;\n  var _React$useState = React.useState({\n      height: 0,\n      measured: false\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    layout = _React$useState2[0],\n    setLayout = _React$useState2[1];\n  var showCallback = useLatestCallback(onShowAnimationFinished);\n  var hideCallback = useLatestCallback(onHideAnimationFinished);\n  var scale = theme.animation.scale;\n  var opacity = position.interpolate({\n    inputRange: [0, 0.1, 1],\n    outputRange: [0, 1, 1]\n  });\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false\n      }).start(showCallback);\n    } else {\n      Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false\n      }).start(hideCallback);\n    }\n  }, [visible, position, scale]);\n  var handleLayout = function handleLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var height = nativeEvent.layout.height;\n    setLayout({\n      height: height,\n      measured: true\n    });\n  };\n  var height = Animated.multiply(position, layout.height);\n  var translateY = Animated.multiply(Animated.add(position, -1), layout.height);\n  return React.createElement(Surface, _extends({}, rest, {\n    style: [!theme.isV3 && styles.elevation, {\n      opacity: opacity\n    }, style],\n    theme: theme\n  }, theme.isV3 && {\n    elevation: elevation\n  }), React.createElement(View, {\n    style: [styles.wrapper, contentStyle]\n  }, React.createElement(Animated.View, {\n    style: {\n      height: height\n    }\n  }), React.createElement(Animated.View, {\n    onLayout: handleLayout,\n    style: [layout.measured || !visible ? [styles.absolute, {\n      transform: [{\n        translateY: translateY\n      }]\n    }] : null, !layout.measured && !visible ? styles.transparent : null]\n  }, React.createElement(View, {\n    style: styles.content\n  }, icon ? React.createElement(View, {\n    style: styles.icon\n  }, React.createElement(Icon, {\n    source: icon,\n    size: 40\n  })) : null, React.createElement(Text, {\n    style: [styles.message, {\n      color: theme.isV3 ? theme.colors.onSurface : theme.colors.text\n    }],\n    accessibilityLiveRegion: visible ? 'polite' : 'none',\n    accessibilityRole: \"alert\",\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, children)), React.createElement(View, {\n    style: styles.actions\n  }, actions.map(function (_ref3, i) {\n    var _theme$colors;\n    var label = _ref3.label,\n      others = _objectWithoutProperties(_ref3, _excluded2);\n    return React.createElement(Button, _extends({\n      key: i,\n      compact: true,\n      mode: \"text\",\n      style: styles.button,\n      textColor: (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary,\n      theme: theme\n    }, others), label);\n  })))));\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0\n  },\n  icon: {\n    margin: 8\n  },\n  message: {\n    flex: 1,\n    margin: 8\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4\n  },\n  button: {\n    margin: 4\n  },\n  elevation: {\n    elevation: 1\n  },\n  transparent: {\n    opacity: 0\n  }\n});\nexport default Banner;","map":{"version":3,"names":["React","Animated","StyleSheet","View","useLatestCallback","Button","Icon","Surface","Text","useInternalTheme","DEFAULT_MAX_WIDTH","Banner","_ref","visible","icon","children","_ref$actions","actions","contentStyle","_ref$elevation","elevation","style","themeOverrides","theme","_ref$onShowAnimationF","onShowAnimationFinished","_ref$onHideAnimationF","onHideAnimationFinished","maxFontSizeMultiplier","rest","_objectWithoutProperties","_excluded","_React$useRef","useRef","Value","position","current","_React$useState","useState","height","measured","_React$useState2","_slicedToArray","layout","setLayout","showCallback","hideCallback","scale","animation","opacity","interpolate","inputRange","outputRange","useEffect","timing","duration","toValue","useNativeDriver","start","handleLayout","_ref2","nativeEvent","multiply","translateY","add","createElement","_extends","isV3","styles","wrapper","onLayout","absolute","transform","transparent","content","source","size","message","color","colors","onSurface","text","accessibilityLiveRegion","accessibilityRole","map","_ref3","i","_theme$colors","label","others","_excluded2","key","compact","mode","button","textColor","primary","create","overflow","alignSelf","width","maxWidth","top","flexDirection","justifyContent","marginHorizontal","marginTop","marginBottom","margin","flex"],"sources":["E:\\Mobile-Application-Development\\NewsApp\\node_modules\\react-native-paper\\src\\components\\Banner.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Animated, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\r\nimport type { LayoutChangeEvent } from 'react-native';\r\n\r\nimport useLatestCallback from 'use-latest-callback';\r\n\r\nimport Button from './Button/Button';\r\nimport Icon, { IconSource } from './Icon';\r\nimport Surface from './Surface';\r\nimport Text from './Typography/Text';\r\nimport { useInternalTheme } from '../core/theming';\r\nimport type { $Omit, $RemoveChildren, ThemeProp } from '../types';\r\n\r\nconst DEFAULT_MAX_WIDTH = 960;\r\n\r\nexport type Props = $Omit<$RemoveChildren<typeof Surface>, 'mode'> & {\r\n  /**\r\n   * Whether banner is currently visible.\r\n   */\r\n  visible: boolean;\r\n  /**\r\n   * Content that will be displayed inside banner.\r\n   */\r\n  children: React.ReactNode;\r\n  /**\r\n   * Icon to display for the `Banner`. Can be an image.\r\n   */\r\n  icon?: IconSource;\r\n  /**\r\n   * Action items to shown in the banner.\r\n   * An action item should contain the following properties:\r\n   *\r\n   * - `label`: label of the action button (required)\r\n   * - `onPress`: callback that is called when button is pressed (required)\r\n   *\r\n   * To customize button you can pass other props that button component takes.\r\n   */\r\n  actions?: Array<\r\n    {\r\n      label: string;\r\n    } & $RemoveChildren<typeof Button>\r\n  >;\r\n  /**\r\n   * Style of banner's inner content.\r\n   * Use this prop to apply custom width for wide layouts.\r\n   */\r\n  contentStyle?: StyleProp<ViewStyle>;\r\n  /**\r\n   * @supported Available in v5.x with theme version 3\r\n   * Changes Banner shadow and background on iOS and Android.\r\n   */\r\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\r\n  /**\r\n   * Specifies the largest possible scale a text font can reach.\r\n   */\r\n  maxFontSizeMultiplier?: number;\r\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n  ref?: React.RefObject<View>;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n  /**\r\n   * @optional\r\n   * Optional callback that will be called after the opening animation finished running normally\r\n   */\r\n  onShowAnimationFinished?: Animated.EndCallback;\r\n  /**\r\n   * @optional\r\n   * Optional callback that will be called after the closing animation finished running normally\r\n   */\r\n  onHideAnimationFinished?: Animated.EndCallback;\r\n};\r\n\r\n/**\r\n * Banner displays a prominent message and related actions.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Image } from 'react-native';\r\n * import { Banner } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => {\r\n *   const [visible, setVisible] = React.useState(true);\r\n *\r\n *   return (\r\n *     <Banner\r\n *       visible={visible}\r\n *       actions={[\r\n *         {\r\n *           label: 'Fix it',\r\n *           onPress: () => setVisible(false),\r\n *         },\r\n *         {\r\n *           label: 'Learn more',\r\n *           onPress: () => setVisible(false),\r\n *         },\r\n *       ]}\r\n *       icon={({size}) => (\r\n *         <Image\r\n *           source={{\r\n *             uri: 'https://avatars3.githubusercontent.com/u/17571969?s=400&v=4',\r\n *           }}\r\n *           style={{\r\n *             width: size,\r\n *             height: size,\r\n *           }}\r\n *         />\r\n *       )}>\r\n *       There was a problem processing a transaction on your credit card.\r\n *     </Banner>\r\n *   );\r\n * };\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst Banner = ({\r\n  visible,\r\n  icon,\r\n  children,\r\n  actions = [],\r\n  contentStyle,\r\n  elevation = 1,\r\n  style,\r\n  theme: themeOverrides,\r\n  onShowAnimationFinished = () => {},\r\n  onHideAnimationFinished = () => {},\r\n  maxFontSizeMultiplier,\r\n  ...rest\r\n}: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n  const { current: position } = React.useRef<Animated.Value>(\r\n    new Animated.Value(visible ? 1 : 0)\r\n  );\r\n  const [layout, setLayout] = React.useState<{\r\n    height: number;\r\n    measured: boolean;\r\n  }>({\r\n    height: 0,\r\n    measured: false,\r\n  });\r\n\r\n  const showCallback = useLatestCallback(onShowAnimationFinished);\r\n  const hideCallback = useLatestCallback(onHideAnimationFinished);\r\n\r\n  const { scale } = theme.animation;\r\n\r\n  const opacity = position.interpolate({\r\n    inputRange: [0, 0.1, 1],\r\n    outputRange: [0, 1, 1],\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (visible) {\r\n      // show\r\n      Animated.timing(position, {\r\n        duration: 250 * scale,\r\n        toValue: 1,\r\n        useNativeDriver: false,\r\n      }).start(showCallback);\r\n    } else {\r\n      // hide\r\n      Animated.timing(position, {\r\n        duration: 200 * scale,\r\n        toValue: 0,\r\n        useNativeDriver: false,\r\n      }).start(hideCallback);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [visible, position, scale]);\r\n\r\n  const handleLayout = ({ nativeEvent }: LayoutChangeEvent) => {\r\n    const { height } = nativeEvent.layout;\r\n    setLayout({ height, measured: true });\r\n  };\r\n\r\n  // The banner animation has 2 parts:\r\n  // 1. Blank spacer element which animates its height to move the content\r\n  // 2. Actual banner which animates its translateY\r\n  // In initial render, we position everything normally and measure the height of the banner\r\n  // Once we have the height, we apply the height to the spacer and switch the banner to position: absolute\r\n  // We need this because we need to move the content below as if banner's height was being animated\r\n  // However we can't animated banner's height directly as it'll also resize the content inside\r\n  const height = Animated.multiply(position, layout.height);\r\n\r\n  const translateY = Animated.multiply(\r\n    Animated.add(position, -1),\r\n    layout.height\r\n  );\r\n  return (\r\n    <Surface\r\n      {...rest}\r\n      style={[!theme.isV3 && styles.elevation, { opacity }, style]}\r\n      theme={theme}\r\n      {...(theme.isV3 && { elevation })}\r\n    >\r\n      <View style={[styles.wrapper, contentStyle]}>\r\n        <Animated.View style={{ height }} />\r\n        <Animated.View\r\n          onLayout={handleLayout}\r\n          style={[\r\n            layout.measured || !visible\r\n              ? // If we have measured banner's height or it's invisible,\r\n                // Position it absolutely, the layout will be taken care of the spacer\r\n                [styles.absolute, { transform: [{ translateY }] }]\r\n              : // Otherwise position it normally\r\n                null,\r\n            !layout.measured && !visible\r\n              ? // If we haven't measured banner's height yet and it's invisible,\r\n                // hide it with opacity: 0 so user doesn't see it\r\n                styles.transparent\r\n              : null,\r\n          ]}\r\n        >\r\n          <View style={styles.content}>\r\n            {icon ? (\r\n              <View style={styles.icon}>\r\n                <Icon source={icon} size={40} />\r\n              </View>\r\n            ) : null}\r\n            <Text\r\n              style={[\r\n                styles.message,\r\n                {\r\n                  color: theme.isV3\r\n                    ? theme.colors.onSurface\r\n                    : theme.colors.text,\r\n                },\r\n              ]}\r\n              accessibilityLiveRegion={visible ? 'polite' : 'none'}\r\n              accessibilityRole=\"alert\"\r\n              maxFontSizeMultiplier={maxFontSizeMultiplier}\r\n            >\r\n              {children}\r\n            </Text>\r\n          </View>\r\n          <View style={styles.actions}>\r\n            {actions.map(({ label, ...others }, i) => (\r\n              <Button\r\n                key={/* eslint-disable-line react/no-array-index-key */ i}\r\n                compact\r\n                mode=\"text\"\r\n                style={styles.button}\r\n                textColor={theme.colors?.primary}\r\n                theme={theme}\r\n                {...others}\r\n              >\r\n                {label}\r\n              </Button>\r\n            ))}\r\n          </View>\r\n        </Animated.View>\r\n      </View>\r\n    </Surface>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  wrapper: {\r\n    overflow: 'hidden',\r\n    alignSelf: 'center',\r\n    width: '100%',\r\n    maxWidth: DEFAULT_MAX_WIDTH,\r\n  },\r\n  absolute: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    width: '100%',\r\n  },\r\n  content: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    marginHorizontal: 8,\r\n    marginTop: 16,\r\n    marginBottom: 0,\r\n  },\r\n  icon: {\r\n    margin: 8,\r\n  },\r\n  message: {\r\n    flex: 1,\r\n    margin: 8,\r\n  },\r\n  actions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    margin: 4,\r\n  },\r\n  button: {\r\n    margin: 4,\r\n  },\r\n  elevation: {\r\n    elevation: 1,\r\n  },\r\n  transparent: {\r\n    opacity: 0,\r\n  },\r\n});\r\n\r\nexport default Banner;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}