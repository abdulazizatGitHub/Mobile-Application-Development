{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"accessibilityLabel\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport AppbarAction from \"./AppbarAction\";\nimport AppbarBackIcon from \"./AppbarBackIcon\";\nimport { forwardRef } from \"../../utils/forwardRef\";\nvar AppbarBackAction = forwardRef(function (_ref, ref) {\n  var _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? 'Back' : _ref$accessibilityLab,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return React.createElement(AppbarAction, _extends({\n    accessibilityLabel: accessibilityLabel\n  }, rest, {\n    icon: AppbarBackIcon,\n    isLeading: true,\n    ref: ref\n  }));\n});\nAppbarBackAction.displayName = 'Appbar.BackAction';\nexport default AppbarBackAction;\nexport { AppbarBackAction };","map":{"version":3,"names":["React","AppbarAction","AppbarBackIcon","forwardRef","AppbarBackAction","_ref","ref","_ref$accessibilityLab","accessibilityLabel","rest","_objectWithoutProperties","_excluded","createElement","_extends","icon","isLeading","displayName"],"sources":["C:\\Users\\w5677\\Mobile-Application-Development\\NewsApp\\node_modules\\react-native-paper\\src\\components\\Appbar\\AppbarBackAction.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport type {\r\n  GestureResponderEvent,\r\n  StyleProp,\r\n  ViewStyle,\r\n  View,\r\n  Animated,\r\n} from 'react-native';\r\n\r\nimport type { $Omit } from './../../types';\r\nimport AppbarAction from './AppbarAction';\r\nimport AppbarBackIcon from './AppbarBackIcon';\r\nimport { forwardRef } from '../../utils/forwardRef';\r\n\r\nexport type Props = $Omit<\r\n  React.ComponentPropsWithoutRef<typeof AppbarAction>,\r\n  'icon'\r\n> & {\r\n  /**\r\n   *  Custom color for back icon.\r\n   */\r\n  color?: string;\r\n  /**\r\n   * Optional icon size.\r\n   */\r\n  size?: number;\r\n  /**\r\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\r\n   */\r\n  disabled?: boolean;\r\n  /**\r\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\r\n   */\r\n  accessibilityLabel?: string;\r\n  /**\r\n   * Function to execute on press.\r\n   */\r\n  onPress?: (e: GestureResponderEvent) => void;\r\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\r\n  ref?: React.RefObject<View>;\r\n};\r\n\r\n/**\r\n * A component used to display a back button in the appbar.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Appbar } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *     <Appbar.Header>\r\n *       <Appbar.BackAction onPress={() => {}} />\r\n *     </Appbar.Header>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst AppbarBackAction = forwardRef<View, Props>(\r\n  ({ accessibilityLabel = 'Back', ...rest }: Props, ref) => (\r\n    <AppbarAction\r\n      accessibilityLabel={accessibilityLabel}\r\n      {...rest}\r\n      icon={AppbarBackIcon}\r\n      isLeading\r\n      ref={ref}\r\n    />\r\n  )\r\n);\r\n\r\nAppbarBackAction.displayName = 'Appbar.BackAction';\r\n\r\nexport default AppbarBackAction;\r\n\r\n// @component-docs ignore-next-line\r\nexport { AppbarBackAction };\r\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAU9B,OAAOC,YAAY;AACnB,OAAOC,cAAc;AACrB,SAASC,UAAU;AA+CnB,IAAMC,gBAAgB,GAAGD,UAAU,CACjC,UAAAE,IAAA,EAAkDC,GAAG;EAAA,IAAAC,qBAAA,GAALF,IAAA,CAA7CG,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAG,MAAM,GAAAA,qBAAA;IAAKE,IAAA,GAAAC,wBAAA,CAAaL,IAAA,EAAAM,SAAA;EAAA,OAC9CX,KAAA,CAAAY,aAAA,CAACX,YAAY,EAAAY,QAAA;IACXL,kBAAkB,EAAEA;EAAmB,GACnCC,IAAI;IACRK,IAAI,EAAEZ,cAAe;IACrBa,SAAS;IACTT,GAAG,EAAEA;EAAI,EACV,CAAC;AAAA,CAEN,CAAC;AAEDF,gBAAgB,CAACY,WAAW,GAAG,mBAAmB;AAElD,eAAeZ,gBAAgB;AAG/B,SAASA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}