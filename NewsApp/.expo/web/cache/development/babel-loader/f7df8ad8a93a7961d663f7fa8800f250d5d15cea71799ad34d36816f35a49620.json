{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"theme\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RadioButtonAndroid from \"./RadioButtonAndroid\";\nimport RadioButtonIOS from \"./RadioButtonIOS\";\nimport { useInternalTheme } from \"../../core/theming\";\nvar RadioButton = function RadioButton(_ref) {\n  var themeOverrides = _ref.theme,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var Button = Platform.select({\n    default: RadioButtonAndroid,\n    ios: RadioButtonIOS\n  });\n  return React.createElement(Button, _extends({}, props, {\n    theme: theme\n  }));\n};\nexport default RadioButton;","map":{"version":3,"names":["React","Platform","RadioButtonAndroid","RadioButtonIOS","useInternalTheme","RadioButton","_ref","themeOverrides","theme","props","_objectWithoutProperties","_excluded","Button","select","default","ios","createElement","_extends"],"sources":["C:\\Users\\w5677\\Mobile-Application-Development\\NewsApp\\node_modules\\react-native-paper\\src\\components\\RadioButton\\RadioButton.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { GestureResponderEvent, Platform } from 'react-native';\r\n\r\nimport RadioButtonAndroid from './RadioButtonAndroid';\r\nimport RadioButtonIOS from './RadioButtonIOS';\r\nimport { useInternalTheme } from '../../core/theming';\r\nimport type { ThemeProp } from '../../types';\r\n\r\nexport type Props = {\r\n  /**\r\n   * Value of the radio button\r\n   */\r\n  value: string;\r\n  /**\r\n   * Status of radio button.\r\n   */\r\n  status?: 'checked' | 'unchecked';\r\n  /**\r\n   * Whether radio is disabled.\r\n   */\r\n  disabled?: boolean;\r\n  /**\r\n   * Function to execute on press.\r\n   */\r\n  onPress?: (e: GestureResponderEvent) => void;\r\n  /**\r\n   * Custom color for unchecked radio.\r\n   */\r\n  uncheckedColor?: string;\r\n  /**\r\n   * Custom color for radio.\r\n   */\r\n  color?: string;\r\n  /**\r\n   * @optional\r\n   */\r\n  theme?: ThemeProp;\r\n  /**\r\n   * testID to be used on tests.\r\n   */\r\n  testID?: string;\r\n};\r\n\r\n/**\r\n * Radio buttons allow the selection a single option from a set.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View } from 'react-native';\r\n * import { RadioButton } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => {\r\n *   const [checked, setChecked] = React.useState('first');\r\n *\r\n *   return (\r\n *     <View>\r\n *       <RadioButton\r\n *         value=\"first\"\r\n *         status={ checked === 'first' ? 'checked' : 'unchecked' }\r\n *         onPress={() => setChecked('first')}\r\n *       />\r\n *       <RadioButton\r\n *         value=\"second\"\r\n *         status={ checked === 'second' ? 'checked' : 'unchecked' }\r\n *         onPress={() => setChecked('second')}\r\n *       />\r\n *     </View>\r\n *   );\r\n * };\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst RadioButton = ({ theme: themeOverrides, ...props }: Props) => {\r\n  const theme = useInternalTheme(themeOverrides);\r\n\r\n  const Button = Platform.select({\r\n    default: RadioButtonAndroid,\r\n    ios: RadioButtonIOS,\r\n  });\r\n\r\n  return <Button {...props} theme={theme} />;\r\n};\r\n\r\nexport default RadioButton;\r\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,QAAA;AAG9B,OAAOC,kBAAkB;AACzB,OAAOC,cAAc;AACrB,SAASC,gBAAgB;AAqEzB,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAGC,IAAA,EAAgD;EAAA,IAAtCC,cAAc,GAAmBD,IAAA,CAAxCE,KAAK;IAAqBC,KAAA,GAAAC,wBAAA,CAAcJ,IAAA,EAAAK,SAAA;EAC7D,IAAMH,KAAK,GAAGJ,gBAAgB,CAACG,cAAc,CAAC;EAE9C,IAAMK,MAAM,GAAGX,QAAQ,CAACY,MAAM,CAAC;IAC7BC,OAAO,EAAEZ,kBAAkB;IAC3Ba,GAAG,EAAEZ;EACP,CAAC,CAAC;EAEF,OAAOH,KAAA,CAAAgB,aAAA,CAACJ,MAAM,EAAAK,QAAA,KAAKR,KAAK;IAAED,KAAK,EAAEA;EAAM,EAAE,CAAC;AAC5C,CAAC;AAED,eAAeH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}