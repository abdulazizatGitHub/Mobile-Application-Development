{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"theme\", \"variant\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useInternalTheme } from \"../../core/theming\";\nfunction AnimatedText(_ref) {\n  var style = _ref.style,\n    themeOverrides = _ref.theme,\n    variant = _ref.variant,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n  if (theme.isV3 && variant) {\n    var font = theme.fonts[variant];\n    if (typeof font !== 'object') {\n      throw new Error(`Variant ${variant} was not provided properly. Valid variants are ${Object.keys(theme.fonts).join(', ')}.`);\n    }\n    return React.createElement(Animated.Text, _extends({}, rest, {\n      style: [font, styles.text, {\n        writingDirection: writingDirection,\n        color: theme.colors.onSurface\n      }, style]\n    }));\n  } else {\n    var _font = !theme.isV3 ? theme.fonts.regular : theme.fonts.bodyMedium;\n    var textStyle = _objectSpread(_objectSpread({}, _font), {}, {\n      color: theme.isV3 ? theme.colors.onSurface : theme.colors.text\n    });\n    return React.createElement(Animated.Text, _extends({}, rest, {\n      style: [styles.text, textStyle, {\n        writingDirection: writingDirection\n      }, style]\n    }));\n  }\n}\nvar styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport var customAnimatedText = function customAnimatedText() {\n  return AnimatedText;\n};\nexport default AnimatedText;","map":{"version":3,"names":["React","Animated","I18nManager","StyleSheet","useInternalTheme","AnimatedText","_ref","style","themeOverrides","theme","variant","rest","_objectWithoutProperties","_excluded","writingDirection","getConstants","isRTL","isV3","font","fonts","Error","Object","keys","join","createElement","Text","_extends","styles","text","color","colors","onSurface","regular","bodyMedium","textStyle","_objectSpread","create","textAlign","customAnimatedText"],"sources":["D:\\5th Semester\\Mobile Application Development\\SemesterProject\\NewsApp\\node_modules\\react-native-paper\\src\\components\\Typography\\AnimatedText.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, I18nManager, StyleSheet, TextStyle } from 'react-native';\n\nimport type { VariantProp } from './types';\nimport { useInternalTheme } from '../../core/theming';\nimport type { ThemeProp } from '../../types';\n\ntype Props<T> = React.ComponentPropsWithRef<typeof Animated.Text> & {\n  /**\n   * Variant defines appropriate text styles for type role and its size.\n   * Available variants:\n   *\n   *  Display: `displayLarge`, `displayMedium`, `displaySmall`\n   *\n   *  Headline: `headlineLarge`, `headlineMedium`, `headlineSmall`\n   *\n   *  Title: `titleLarge`, `titleMedium`, `titleSmall`\n   *\n   *  Label:  `labelLarge`, `labelMedium`, `labelSmall`\n   *\n   *  Body: `bodyLarge`, `bodyMedium`, `bodySmall`\n   */\n  variant?: VariantProp<T>;\n  style?: TextStyle;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Animated text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nfunction AnimatedText({\n  style,\n  theme: themeOverrides,\n  variant,\n  ...rest\n}: Props<never>) {\n  const theme = useInternalTheme(themeOverrides);\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n  if (theme.isV3 && variant) {\n    const font = theme.fonts[variant];\n    if (typeof font !== 'object') {\n      throw new Error(\n        `Variant ${variant} was not provided properly. Valid variants are ${Object.keys(\n          theme.fonts\n        ).join(', ')}.`\n      );\n    }\n\n    return (\n      <Animated.Text\n        {...rest}\n        style={[\n          font,\n          styles.text,\n          { writingDirection, color: theme.colors.onSurface },\n          style,\n        ]}\n      />\n    );\n  } else {\n    const font = !theme.isV3 ? theme.fonts.regular : theme.fonts.bodyMedium;\n    const textStyle = {\n      ...font,\n      color: theme.isV3 ? theme.colors.onSurface : theme.colors.text,\n    };\n    return (\n      <Animated.Text\n        {...rest}\n        style={[\n          styles.text,\n          textStyle,\n          {\n            writingDirection,\n          },\n          style,\n        ]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport const customAnimatedText = <T,>() =>\n  AnimatedText as (props: Props<T>) => JSX.Element;\n\nexport default AnimatedText;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,QAAA;AAAA,OAAAC,WAAA;AAAA,OAAAC,UAAA;AAI9B,SAASC,gBAAgB;AA+BzB,SAASC,YAAYA,CAAAC,IAAA,EAKJ;EAAA,IAJfC,KAAK,GAIQD,IAAA,CAJbC,KAAK;IACEC,cAAc,GAGRF,IAAA,CAHbG,KAAK;IACLC,OAAO,GAEMJ,IAAA,CAFbI,OAAO;IACJC,IAAA,GAAAC,wBAAA,CACUN,IAAA,EAAAO,SAAA;EACb,IAAMJ,KAAK,GAAGL,gBAAgB,CAACI,cAAc,CAAC;EAC9C,IAAMM,gBAAgB,GAAGZ,WAAW,CAACa,YAAY,CAAC,CAAC,CAACC,KAAK,GAAG,KAAK,GAAG,KAAK;EAEzE,IAAIP,KAAK,CAACQ,IAAI,IAAIP,OAAO,EAAE;IACzB,IAAMQ,IAAI,GAAGT,KAAK,CAACU,KAAK,CAACT,OAAO,CAAC;IACjC,IAAI,OAAOQ,IAAI,KAAK,QAAQ,EAAE;MAC5B,MAAM,IAAIE,KAAK,CACZ,WAAUV,OAAQ,kDAAiDW,MAAM,CAACC,IAAI,CAC7Eb,KAAK,CAACU,KACR,CAAC,CAACI,IAAI,CAAC,IAAI,CAAE,GACf,CAAC;IACH;IAEA,OACEvB,KAAA,CAAAwB,aAAA,CAACvB,QAAQ,CAACwB,IAAI,EAAAC,QAAA,KACRf,IAAI;MACRJ,KAAK,EAAE,CACLW,IAAI,EACJS,MAAM,CAACC,IAAI,EACX;QAAEd,gBAAgB,EAAhBA,gBAAgB;QAAEe,KAAK,EAAEpB,KAAK,CAACqB,MAAM,CAACC;MAAU,CAAC,EACnDxB,KAAK;IACL,EACH,CAAC;EAEN,CAAC,MAAM;IACL,IAAMW,KAAI,GAAG,CAACT,KAAK,CAACQ,IAAI,GAAGR,KAAK,CAACU,KAAK,CAACa,OAAO,GAAGvB,KAAK,CAACU,KAAK,CAACc,UAAU;IACvE,IAAMC,SAAS,GAAAC,aAAA,CAAAA,aAAA,KACVjB,KAAI;MACPW,KAAK,EAAEpB,KAAK,CAACQ,IAAI,GAAGR,KAAK,CAACqB,MAAM,CAACC,SAAS,GAAGtB,KAAK,CAACqB,MAAM,CAACF;IAAA,EAC3D;IACD,OACE5B,KAAA,CAAAwB,aAAA,CAACvB,QAAQ,CAACwB,IAAI,EAAAC,QAAA,KACRf,IAAI;MACRJ,KAAK,EAAE,CACLoB,MAAM,CAACC,IAAI,EACXM,SAAS,EACT;QACEpB,gBAAA,EAAAA;MACF,CAAC,EACDP,KAAK;IACL,EACH,CAAC;EAEN;AACF;AAEA,IAAMoB,MAAM,GAAGxB,UAAU,CAACiC,MAAM,CAAC;EAC/BR,IAAI,EAAE;IACJS,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA;EAAA,OAC7BjC,YAAgD;AAAA;AAElD,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}